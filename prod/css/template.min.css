@import"https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;600&display=swap";@-webkit-keyframes up{from{transform:translateY(10vh);opacity:0}to{transform:translateY(0);opacity:1}}@keyframes up{from{transform:translateY(10vh);opacity:0}to{transform:translateY(0);opacity:1}}@-webkit-keyframes down{from{transform:translateY(-2vh);opacity:0}to{transform:translateY(0);opacity:1}}@keyframes down{from{transform:translateY(-2vh);opacity:0}to{transform:translateY(0);opacity:1}}@-webkit-keyframes zoom{from{transform:scale(0%);opacity:0}to{transform:scale(100%);opacity:1}}@keyframes zoom{from{transform:scale(0%);opacity:0}to{transform:scale(100%);opacity:1}}*,*::before,*::after{box-sizing:inherit;padding:0;margin:0}html{line-height:1.15;box-sizing:border-box;font-family:"Raleway",sans-serif}main{display:block}h1{font-size:2em;margin:.67em 0}a{background-color:transparent}img{display:block}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}code,kbd,samp,pre{font-family:monospace,monospace;font-size:1em}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}button,input,optgroup,select,textarea{line-height:inherit;border:1px solid currentColor}button{overflow:visible;text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button;padding:1px 6px}input{overflow:visible}input,textarea{padding:1px}fieldset{border:1px solid currentColor;margin:0 2px}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{display:inline-block;vertical-align:baseline}select{text-transform:none}textarea{overflow:auto;vertical-align:top}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=color]{background:inherit}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}::-webkit-input-placeholder{color:inherit;opacity:.5}::-webkit-search-decoration,::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}::-moz-focus-inner{border:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}hr{box-sizing:content-box;height:0;color:inherit;overflow:visible}dl,ol,ul{margin:1em 0}ol ol,ol ul,ol dl,ul ol,ul ul,ul dl,dl ol,dl ul,dl dl{margin:0}b,strong{font-weight:bolder}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border:0}svg:not(:root){overflow:hidden}table{text-indent:0;border-color:inherit}details{display:block}dialog{background-color:inherit;border:solid;color:inherit;display:block;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;left:0;margin:auto;padding:1em;position:absolute;right:0;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}dialog:not([open]){display:none}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}::-moz-selection{color:#fff;background:#fb0}::selection{color:#fff;background:#fb0}.button{padding:1rem 2em;display:block;width:-webkit-max-content;width:-moz-max-content;width:max-content}.button.look{color:#fff;background-color:#fb0;transition:all .3s ease-in-out 0s;cursor:pointer}.button.look:hover{background-color:#011;color:#fff}.button.request{transition:all .3s ease-in-out 0s;cursor:pointer;color:#fff;background-color:#011}.button.request:hover{background-color:#fb0;color:#fff}.button.reply{transition:all .3s ease-in-out 0s;cursor:pointer;color:#011;background-color:#fff;border:1px solid #dde}.button.reply:hover{background-color:#fb0;color:#fff}form{display:flex;align-items:center;position:relative}form :nth-of-type(1){flex-basis:100%}form :nth-of-type(2){flex-basis:50px}form input,form textarea{width:100%;height:3rem;background-color:transparent;border-color:rgba(102,102,102,.4);padding:1rem}form input:focus,form textarea:focus{outline:1px solid #fb0}form input::-moz-placeholder, form textarea::-moz-placeholder{color:#666}form input:-ms-input-placeholder, form textarea:-ms-input-placeholder{color:#666}form input::placeholder,form textarea::placeholder{color:#666}form input[type=submit]{background-color:#fb0;border:transparent;cursor:pointer}form svg{position:absolute;width:24px;right:13px}footer form input,footer form textarea{border-right:transparent}footer form input[type=submit]{aspect-ratio:1}.blog .leave-a-comment form{display:grid;grid-template-columns:50% 50%;padding-top:1rem;padding-bottom:1rem;gap:1rem}.blog .leave-a-comment form div{padding:0 1rem;padding-left:0}.blog .leave-a-comment form input:not([type=submit]),.blog .leave-a-comment form textarea{background-color:#fff}.blog .leave-a-comment form .name *,.blog .leave-a-comment form .email *{margin:0 auto;border:0}.blog .leave-a-comment form .subject,.blog .leave-a-comment form .message,.blog .leave-a-comment form .submit{width:100%;grid-column:span 2}.blog .leave-a-comment form .subject *,.blog .leave-a-comment form .message *,.blog .leave-a-comment form .submit *{margin:0 auto;border:0}.gallery .grid{display:grid;grid-template-columns:repeat(4, 1fr);grid-template-rows:repeat(2, 1fr);gap:.75rem}.gallery .grid a{display:block;width:100%;overflow:hidden;z-index:2;position:relative}.gallery .grid a img{display:block;-o-object-fit:cover;object-fit:cover;width:100%}.gallery .grid a:nth-of-type(n+13){display:none}.gallery .grid a::before{background:#fb0;position:absolute;content:"";width:100%;height:100%;top:0;left:0;opacity:0;z-index:4}.gallery .grid a::before{transition:all .2s ease-in-out 0s}.gallery .grid a:hover::before{opacity:.6}body h1,body h2,body h3,body h4{font-family:"Poppins","Gill Sans","Gill Sans MT",Calibri,"Trebuchet MS",sans-serif;font-weight:600}body p,body a,body input,body blockquote{font-family:"Poppins",Arial,Helvetica,sans-serif;font-weight:300}body a{text-decoration:none;text-transform:uppercase;color:inherit}span.heart{font-size:0}span.heart::before{content:"❤";font-size:initial}h1{text-transform:uppercase}.super{text-transform:uppercase;font-size:calc((20px + .2vw)*.65)}input::-moz-placeholder{font-family:"Poppins",FontAwesome}input:-ms-input-placeholder{font-family:"Poppins",FontAwesome}input::placeholder,textarea{font-family:"Poppins",FontAwesome}.reviews-slider{display:flex;align-items:center}.reviews-slider .review{padding:1em;display:flex;flex-direction:row;align-items:flex-start;color:#222;background-color:#fff}@media screen and (max-width: 575px){.reviews-slider .review{width:100%}}.reviews-slider .review .img-wrapper{border-radius:999px;overflow:hidden;width:6rem;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;aspect-ratio:1;margin:.5rem 1rem}.reviews-slider .review .img-wrapper img{width:100%}.reviews-slider .review figure>*{margin:.5rem}.reviews-slider .review figure .stars{--percent: calc(var(--rating) / 5 * 100%);display:inline-block;font-size:2rem;line-height:1}.reviews-slider .review figure .stars::before{content:"★★★★★";letter-spacing:3px;background:linear-gradient(90deg, #fb0 var(--percent), #666 var(--percent));-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent}.service .text-wrapper,.post .text-wrapper{padding-top:.5rem}.service .text-wrapper>*,.post .text-wrapper>*{padding-bottom:1rem}.service .text-wrapper .intro,.service .text-wrapper .desc,.post .text-wrapper .intro,.post .text-wrapper .desc{color:#666}.hoverable .img-wrapper img{transition:all .3s ease-in-out 0s}.hoverable h1,.hoverable h2,.hoverable h3{transition:all .3s ease-in-out 0s;cursor:pointer}.hoverable h1:hover,.hoverable h2:hover,.hoverable h3:hover{color:#fb0}.service:hover{cursor:pointer}.service:hover .img-wrapper img{transform:rotate(8deg) scale(125%)}.post:hover{cursor:pointer}.post:hover .img-wrapper img{transform:scale(110%)}.tags a{display:inline-block;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;padding:.75rem 1rem;border:1px solid #dde;margin:.75rem .25rem;text-transform:initial;transition:all .3s ease-in-out 0s;cursor:pointer}.tags a:first-of-type{margin-left:0}.tags a:hover{background-color:#fb0;color:#fff}.material-popout{box-shadow:#dde 0px 8px 24px}.search{position:relative}.search input[type=text]{border-radius:999px;border:0;width:100%;background-color:#fb0}.search input[type=text]::-moz-placeholder{color:#fff;opacity:1}.search input[type=text]:-ms-input-placeholder{color:#fff;opacity:1}.search input[type=text]::placeholder{color:#fff;opacity:1}.search input[type=submit]{border:0;background-color:transparent;position:absolute;right:0;z-index:2}.search:after{font-family:FontAwesome;content:"";font-size:1.5rem;position:absolute;right:2rem;top:50%;transform:translateY(-50%);color:#fff;z-index:1}.blog aside .ad{width:100%;aspect-ratio:6/5;background-image:url(../img/photos/blog/ads-banner.jpg);background-size:cover;background-position:center;background-repeat:no-repeat}.mapouter{position:relative;text-align:right;height:500px;width:100%;box-sizing:content-box;border:.5rem solid #fff;border-radius:1rem}.mapouter .gmap_canvas{overflow:hidden;background:none !important;height:500px}aside{width:350px;padding:1.2rem;margin-top:.9rem}@media screen and (max-width: 992px){aside{width:calc(100% - 1rem)}}aside section{border-top:1px solid #dde;padding:1rem}aside h2{background-color:#fb0;padding:.75rem;text-align:center;font-size:90%;color:#fff}aside p{color:#666}aside .search{position:relative}aside .search input[type=text]{border-radius:999px;border:0;width:100%;background-color:#fb0}aside .search input[type=text]::-moz-placeholder{color:#fff;opacity:1}aside .search input[type=text]:-ms-input-placeholder{color:#fff;opacity:1}aside .search input[type=text]::placeholder{color:#fff;opacity:1}aside .search input[type=submit]{border:0;background-color:transparent;position:absolute;right:0;z-index:2}aside .search:after{font-family:FontAwesome;content:"";font-size:1.5rem;position:absolute;right:2rem;top:50%;transform:translateY(-50%);color:#fff;z-index:1}aside .author{display:flex;flex-direction:column;align-items:center;gap:2rem}aside .author .social{width:50%}aside .author .img-wrapper{border-radius:999px;width:150px;height:150px;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content}aside .author .text-wrapper{display:flex;flex-direction:column;align-items:center;text-align:center;gap:1rem}aside .post-snippet{width:100%;margin-top:1rem;display:flex;flex-direction:row-reverse}aside .post-snippet .img-wrapper{width:30%}aside .post-snippet .img-wrapper img{width:100%}aside .post-snippet .text-wrapper{font-size:92%;padding-left:1rem;width:70%;display:flex;flex-direction:column;justify-content:center;gap:.5rem}aside .categories{padding-left:0;padding-right:0}aside .categories .cat{display:grid;grid-template-columns:80% 20%;border-bottom:2.75px dotted #f9f9ff;margin:.5rem 0;padding:1rem 0}aside .categories .cat .num{text-align:right}aside .newsletter{text-align:center}aside .newsletter p{margin:1rem 0}aside .newsletter input[type=submit]{aspect-ratio:unset;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;border:0;color:#fff;font-weight:bold;padding:0 1rem;margin-left:calc(1px - 1rem - 1px);box-sizing:border-box}footer{width:100%;background-color:#011;color:#666;padding-top:4rem;padding-bottom:4rem;gap:4rem}footer:not(:last-of-type){padding-bottom:0}footer:not(:first-of-type){padding-top:0}footer.info>*{display:grid;grid-template-columns:repeat(4, 1fr);gap:1rem}@media screen and (max-width: 992px){footer.info>*{grid-template-columns:repeat(2, 1fr)}}@media screen and (max-width: 575px){footer.info>*{grid-template-columns:1fr}}footer.links>*{padding-top:2rem;padding-bottom:2rem;gap:2rem;display:flex;justify-content:space-between;flex-direction:row-reverse;border-top:1px solid #222}@media screen and (max-width: 992px){footer.links>*{flex-direction:column}}footer.links>* a{transition:all .3s ease-in-out 0s;cursor:pointer}footer.links>* a:hover{color:#fb0}footer.links>* p a,footer.links>* p span{color:#fb0}footer.links>* .social{display:flex;gap:1rem}footer h1,footer h2,footer h3,footer h4{color:#fff;text-transform:uppercase;font-size:calc((20px + .2vw)*.75)}footer p,footer a{text-transform:initial;font-size:calc((16px + .16vw)*.75)}footer h3+p,footer h3+div{padding-top:1.75rem;padding-bottom:1.75rem;gap:1.75rem}footer .site-navigation div{display:grid;grid-template-columns:repeat(2, 1fr);grid-template-rows:repeat(5, 1fr)}footer .site-navigation div h3{grid-column:span 2}.wrapper{margin:0 auto;width:100%;max-width:1140px}div.container{padding:0 1rem}section.container{padding:6rem 6rem}@media screen and (max-width: 992px){section.container{padding:4rem 4rem}}@media screen and (max-width: 768px){section.container{padding:2rem 2rem}}footer.container{padding:6rem 6rem}footer.container .wrapper{gap:2rem}@media screen and (max-width: 992px){footer.container{padding:4rem 4rem}}@media screen and (max-width: 768px){footer.container{padding:2rem 2rem}}.pad{padding:3rem}.wrapper.nopad{padding-bottom:0;padding-top:0;max-width:unset}.center-content>.wrapper{display:flex;flex-direction:column;align-items:center}.center-content>.wrapper .title{width:50%;text-align:center}.light{background-color:#f9f9ff}.bg{background-size:cover;background-position:center;background-repeat:no-repeat;position:relative}.bg img{position:absolute;-o-object-fit:cover;object-fit:cover;height:100%;-o-object-position:center center;object-position:center center}.two-elements{width:100%;display:flex;flex-direction:row;padding-top:2rem;padding-bottom:2rem;gap:2rem}.two-elements>*{width:50%}@media screen and (max-width: 768px){.two-elements>*{width:100%}.two-elements>*.img-wrapper{min-height:30vh}}@media screen and (max-width: 768px){.two-elements{flex-direction:column}}.three-elements{width:100%;display:grid;grid-template-columns:repeat(3, 1fr);padding-top:2rem;padding-bottom:2rem;gap:2rem}@media screen and (max-width: 575px){.three-elements{grid-template-columns:100%}}.four-elements{width:100%;display:grid;grid-template-columns:repeat(4, 1fr);padding-top:2rem;padding-bottom:2rem;gap:2rem}@media screen and (max-width: 992px){.four-elements{grid-template-columns:repeat(2, 1fr)}}@media screen and (max-width: 575px){.four-elements{grid-template-columns:100%}}.img-right .text-wrapper,.img-left .text-wrapper{padding:4rem;display:flex;flex-direction:column;align-items:center;justify-content:center}.img-right .text-wrapper .text,.img-left .text-wrapper .text{max-width:50%;display:flex;flex-direction:column;justify-content:center;gap:1rem}@media screen and (max-width: 1140px){.img-right .text-wrapper .text,.img-left .text-wrapper .text{max-width:100%}}.img-right .text-wrapper .text .button,.img-left .text-wrapper .text .button{align-self:center;margin:3rem}.img-wrapper{overflow:hidden}.img-wrapper img{width:100%}.featured-image img{width:100%}.comfort-reading{color:#666;line-height:1.5em}.section-title{text-align:center;padding:1rem}.home header.bg{background-image:url(../img/photos/home/hero-home.jpg);height:100vh}@media screen and (max-width: 768px){.home header.bg{height:65vh}}.home header.bg .wrapper{justify-content:center}.home header.bg .title{width:30%}@media screen and (max-width: 992px){.home header.bg .title{width:75%}}@media screen and (max-width: 768px){.home header.bg .title{width:100%}}.blog header.bg{background-image:url(../img/photos/blog/hero-blog.jpg);height:50vh}.blog header.bg .wrapper{justify-content:center;align-items:center}.blog header.bg .title{font-size:200%;width:100%}.blog header.bg .title h1{text-transform:initial}header{z-index:-1;position:relative}header::before{background:#011;position:absolute;content:"";width:100%;height:100%;top:0;left:0;opacity:.6;z-index:1}header .wrapper{display:flex;flex-direction:column;color:#fff;height:100%}header .wrapper .title{z-index:1;display:flex;flex-direction:column}header .wrapper .title>*{margin:1rem}header .wrapper .breadcrumbs{margin:0 6rem}header .wrapper .breadcrumbs ul{list-style:none;padding:0}header .wrapper .breadcrumbs li::before{font-family:FontAwesome;display:inline-block;margin-left:calc -1.3em;width:1.3em;margin-right:.65em}header .wrapper .breadcrumbs li{display:inline-block}header .wrapper .breadcrumbs li::before{content:""}nav{position:fixed;font-size:calc((16px + .16vw)*.6);color:#fff;width:100%;z-index:2}nav .social,nav .logo,nav .user-actions,nav .site-navigation{display:flex;gap:1rem}.nav-row{display:flex;width:100%;justify-content:space-between;align-items:center}.nav-row.upper{text-transform:initial;margin:1rem 0;padding-right:1rem;padding-left:1rem}.nav-row.highlight{font-weight:500;background-color:rgba(255,255,255,.2);margin:1rem 0;padding-right:1rem;padding-left:1rem;padding-top:1rem;padding-bottom:1rem;gap:1rem}.burger-reveal{position:fixed;z-index:999;height:100%;width:100%;margin:0;padding:0;display:flex}.burger-reveal .side{position:relative;width:400px;height:100%;padding:2rem;background-color:#011;opacity:1}.burger-reveal .side .site-navigation{display:flex;flex-direction:column;font-size:calc((20px + .2vw)*1.2)}.burger-reveal .click-out{position:relative;width:100%;height:100%;background-color:#011;opacity:.3}.burger-reveal.active{width:100%}.burger-reveal.active::before{visibility:visible}.burger-reveal.active .side{right:0}.destinations .img-wrapper{position:relative}.destinations .img-wrapper div{position:absolute;top:0;left:0;width:100%;height:100%;color:#fff;display:flex;padding-top:.5rem;padding-bottom:.5rem;gap:.5rem;flex-direction:column;align-items:center;justify-content:center;z-index:1}.destinations .img-wrapper a{background-color:#fb0;display:block;padding:.25rem .75rem;opacity:0;transition:all .3s ease-in-out 0s}.destinations .img-wrapper:hover{cursor:pointer}.destinations .img-wrapper:hover a{opacity:1}.destinations .img-wrapper:hover:after{opacity:.3}.destinations .img-wrapper:after{content:"";position:absolute;background-color:#011;top:0;left:0;width:100%;height:100%;opacity:0;z-index:0;transition:all .3s ease-in-out 0s}.prices{background-image:url(../img/graphics/world.png)}.prices h3{padding-top:1rem;padding-bottom:1rem;gap:1rem;border-bottom:1px solid #fb0;background-color:#fff}.prices .price-table{display:grid;background-color:#fff;padding:1.25em 0;grid-template-columns:77% 20%;gap:.75em}.prices .price-table p,.prices .price-table a{line-height:2em}.prices .price-table a{font-weight:bold;text-align:center;background-color:#f9f9ff}@media screen and (max-width: 992px){.latest .three-elements{grid-template-columns:1fr 1fr}.latest .three-elements .post:nth-of-type(n+3){display:none}}@media screen and (max-width: 575px){.latest .three-elements{grid-template-columns:1fr}.latest .three-elements .post:nth-of-type(n+2){display:none}}.blog main{background-color:#f9f9ff}.blog main>.wrapper{padding:0 2vw;display:grid;grid-template-columns:1fr 350px;grid-template-areas:"featured   aside" "post-nav   aside" "comments   aside"}@media screen and (max-width: 992px){.blog main>.wrapper{grid-template-columns:100%;grid-template-areas:"featured" "post-nav" "comments" "aside"}}.blog main>.wrapper aside{grid-area:aside}.blog main>.wrapper .article{grid-area:featured}.blog main>.wrapper .post-navigation{grid-area:post-nav}.blog main>.wrapper .article{grid-area:featured}.blog main>.wrapper>*{border:1px solid #dde;padding:1rem;margin:.5rem}.blog .article{display:grid;grid-template-columns:20% 1fr;grid-auto-rows:-webkit-max-content;grid-auto-rows:max-content;grid-template-areas:"fimage  fimage" "details  title  " "details  intro  " "quoted   quoted "}@media screen and (max-width: 575px){.blog .article{grid-template-columns:100%;grid-template-areas:"fimage" "details" "title" "intro" "quoted"}}.blog .article .featured-image{grid-area:fimage}.blog .article .details{grid-area:details}.blog .article .article-title{grid-area:title}.blog .article .intro{grid-area:intro}.blog .article .quoted{grid-area:quoted}.blog .article .tags a{text-transform:unset;display:inline;border:0;padding:0;margin:0}.blog .article .tags a:not(:last-child):after{content:","}.blog .article .details{text-align:right;display:flex;flex-direction:column;align-items:flex-end}@media screen and (max-width: 575px){.blog .article .details{margin-top:1rem;height:10rem;flex-wrap:wrap;padding:0 1rem;align-items:flex-start}}.blog .article .details>*{margin:1rem 0}@media screen and (max-width: 575px){.blog .article .details>*{width:40%;flex:1 0 16%;justify-content:flex-start;text-align:left;margin:.5rem 0}}.blog .article .details .author,.blog .article .details .date,.blog .article .details .views,.blog .article .details .comments{display:flex;gap:1rem}.blog .article .details .author::after,.blog .article .details .date::after,.blog .article .details .views::after,.blog .article .details .comments::after{font-family:FontAwesome}.blog .article .details .social{width:75%;justify-content:space-between}@media screen and (max-width: 575px){.blog .article .details .social{width:40%;padding-right:3rem}}.blog .article .details .author::after{content:""}.blog .article .details .date::after{content:""}.blog .article .details .views::after{content:""}.blog .article .details .comments::after{content:""}.blog .article .article-content h2,.blog .article .article-content h3,.blog .article .article-content h4,.blog .article .article-content p{margin:1rem}.blog .article .quoted{background-color:#fff;padding:1.5rem}.blog .article :nth-of-type(n+6){grid-column:span 2}.post-navigation{height:-webkit-fit-content;height:-moz-fit-content;height:fit-content}.post-navigation div[onclick="toPrev()"],.post-navigation div[onclick="toNext()"]{cursor:pointer;display:flex}.post-navigation div[onclick="toPrev()"].next,.post-navigation div[onclick="toNext()"].next{flex-direction:row-reverse}.post-navigation div[onclick="toPrev()"] .img-wrapper,.post-navigation div[onclick="toNext()"] .img-wrapper{position:relative;width:5rem}.post-navigation div[onclick="toPrev()"] .img-wrapper::after,.post-navigation div[onclick="toNext()"] .img-wrapper::after{font-family:FontAwesome;position:absolute;font-size:calc((16px + .16vw)*1.5);top:50%;left:50%;transform:translate(-50%, -50%);color:#fff;opacity:0;transition:all .3s ease-in-out 0s}.post-navigation div[onclick="toPrev()"].prev .img-wrapper::after,.post-navigation div[onclick="toNext()"].prev .img-wrapper::after{content:""}.post-navigation div[onclick="toPrev()"].next .img-wrapper::after,.post-navigation div[onclick="toNext()"].next .img-wrapper::after{content:""}.post-navigation div[onclick="toPrev()"].prev:hover .img-wrapper::after,.post-navigation div[onclick="toNext()"].prev:hover .img-wrapper::after{opacity:1}.post-navigation div[onclick="toPrev()"].next:hover .img-wrapper::after,.post-navigation div[onclick="toNext()"].next:hover .img-wrapper::after{opacity:1}.post-navigation div[onclick="toPrev()"] .text-wrapper,.post-navigation div[onclick="toNext()"] .text-wrapper{margin:1rem;height:100%}.post-navigation div[onclick="toPrev()"] .text-wrapper .super,.post-navigation div[onclick="toNext()"] .text-wrapper .super{margin-bottom:1.25rem}.comments .comment{grid-column:span 3;padding:1rem;display:grid;grid-template-columns:5rem 3fr 1fr}.comments .comment .comment{padding-left:2rem}.comments .comment .text-wrapper{padding:.5rem 1rem}.comments .comment .text-wrapper .date{color:#dde;margin-bottom:1.75rem}main .social{display:flex;justify-content:space-between}main .social a{transition:all .3s ease-in-out 0s;cursor:pointer}main .social a:hover{color:#fb0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
