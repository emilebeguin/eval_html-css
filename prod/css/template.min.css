@import"https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;600&display=swap";@-webkit-keyframes up{from{transform:translateY(10vh);opacity:0}to{transform:translateY(0);opacity:1}}@keyframes up{from{transform:translateY(10vh);opacity:0}to{transform:translateY(0);opacity:1}}@-webkit-keyframes down{from{transform:translateY(-2vh);opacity:0}to{transform:translateY(0);opacity:1}}@keyframes down{from{transform:translateY(-2vh);opacity:0}to{transform:translateY(0);opacity:1}}@-webkit-keyframes zoom{from{transform:scale(0%);opacity:0}to{transform:scale(100%);opacity:1}}@keyframes zoom{from{transform:scale(0%);opacity:0}to{transform:scale(100%);opacity:1}}*,*::before,*::after{box-sizing:inherit;padding:0;margin:0}html{line-height:1.15;box-sizing:border-box;font-family:"Raleway",sans-serif}main{display:block}h1{font-size:2em;margin:.67em 0}a{background-color:transparent}img{display:block}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}code,kbd,samp,pre{font-family:monospace,monospace;font-size:1em}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}button,input,optgroup,select,textarea{line-height:inherit;border:1px solid currentColor}button{overflow:visible;text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button;padding:1px 6px}input{overflow:visible}input,textarea{padding:1px}fieldset{border:1px solid currentColor;margin:0 2px}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{display:inline-block;vertical-align:baseline}select{text-transform:none}textarea{overflow:auto;vertical-align:top}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=color]{background:inherit}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}::-webkit-input-placeholder{color:inherit;opacity:.5}::-webkit-search-decoration,::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}::-moz-focus-inner{border:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}hr{box-sizing:content-box;height:0;color:inherit;overflow:visible}dl,ol,ul{margin:1em 0}ol ol,ol ul,ol dl,ul ol,ul ul,ul dl,dl ol,dl ul,dl dl{margin:0}b,strong{font-weight:bolder}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border:0}svg:not(:root){overflow:hidden}table{text-indent:0;border-color:inherit}details{display:block}dialog{background-color:inherit;border:solid;color:inherit;display:block;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;left:0;margin:auto;padding:1em;position:absolute;right:0;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}dialog:not([open]){display:none}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}.button{padding:1rem 2em;display:block;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.button.look{color:#fff;background-color:#fb0;transition:all .3s ease-in-out 0s;cursor:pointer}.button.look:hover{background-color:#011;color:#fff}.button.request{transition:all .3s ease-in-out 0s;cursor:pointer;color:#fff;background-color:#011}.button.request:hover{background-color:#fb0;color:#fff}form{display:flex;align-items:center;position:relative}form :nth-of-type(1){flex-basis:100%}form :nth-of-type(2){flex-basis:50px}form input{height:3rem;background-color:#011;border-color:#444 transparent #444 #444;padding:1rem}form input:focus{outline:1px solid #fb0}form input::-moz-placeholder{color:#444}form input:-ms-input-placeholder{color:#444}form input::placeholder{color:#444}form input[type=submit]{aspect-ratio:1;background-color:#fb0;cursor:pointer;text-indent:-99999px}form svg{position:absolute;width:24px;right:13px}.gallery .grid{display:grid;grid-template-columns:repeat(4, 1fr);grid-template-rows:repeat(2, 1fr);gap:.75rem}.gallery .grid a{display:block;width:100%;overflow:hidden;z-index:2;position:relative}.gallery .grid a img{display:block;-o-object-fit:cover;object-fit:cover;width:100%}.gallery .grid a:nth-of-type(n+13){display:none}.gallery .grid a::before{background:#fb0;position:absolute;content:"";width:100%;height:100%;top:0;left:0;opacity:0;z-index:4}.gallery .grid a::before{transition:all .2s ease-in-out 0s}.gallery .grid a:hover::before{opacity:.6}body h1,body h2,body h3,body h4{font-family:"Poppins","Gill Sans","Gill Sans MT",Calibri,"Trebuchet MS",sans-serif;font-weight:600}body p,body a,body input{font-family:"Poppins",Arial,Helvetica,sans-serif;font-weight:300}body a{text-decoration:none;text-transform:uppercase;color:inherit}span.heart{font-size:0}span.heart::before{content:"❤";font-size:initial}h1{text-transform:uppercase}.super{text-transform:uppercase;font-size:calc((20px + .2vw)*.65)}.reviews-slider{display:flex;align-items:center}.reviews-slider .review{width:50%;padding:1em;display:flex;flex-direction:row;align-items:flex-start;color:#222;background-color:#fff}@media screen and (max-width: 575px){.reviews-slider .review{width:100%}}.reviews-slider .review .img-wrapper{border-radius:999px;overflow:hidden;width:6rem;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;aspect-ratio:1;margin:.5rem 1rem}.reviews-slider .review .img-wrapper img{width:100%}.reviews-slider .review figure>*{margin:.5rem}.reviews-slider .review figure .stars{--percent: calc(var(--rating) / 5 * 100%);display:inline-block;font-size:2rem;line-height:1}.reviews-slider .review figure .stars::before{content:"★★★★★";letter-spacing:3px;background:linear-gradient(90deg, #fb0 var(--percent), #444 var(--percent));-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent}article .tags a{display:inline-block;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;padding:.25rem .75rem;border:1px solid #f9f9ff;margin:.75rem .25rem;transition:all .3s ease-in-out 0s;cursor:pointer}article .tags a:first-of-type{margin-left:0}article .tags a:hover{background-color:#fb0;color:#fff}.mapouter{position:relative;text-align:right;height:500px;width:100%;box-sizing:content-box;border:.5rem solid #fff;border-radius:1rem}.mapouter .gmap_canvas{overflow:hidden;background:none !important;height:500px}footer{width:100%;background-color:#011;color:#444;padding-top:4rem;padding-bottom:4rem;gap:4rem}footer:not(:last-of-type){padding-bottom:0}footer:not(:first-of-type){padding-top:0}footer.info>*{display:grid;grid-template-columns:repeat(4, 1fr);gap:1rem}footer.links>*{padding-top:2rem;padding-bottom:2rem;gap:2rem;display:flex;justify-content:space-between;flex-direction:row-reverse;border-top:1px solid #222}footer.links>* a,footer.links>* span{color:#fb0}footer.links>* .social{display:flex;gap:1rem}footer h1,footer h2,footer h3,footer h4{color:#fff;text-transform:uppercase;font-size:calc((20px + .2vw)*.75)}footer p,footer a{text-transform:initial;font-size:calc((16px + .16vw)*.75)}footer h3+p,footer h3+div{padding-top:1.75rem;padding-bottom:1.75rem;gap:1.75rem}footer .site-navigation div{display:grid;grid-template-columns:repeat(2, 1fr);grid-template-rows:repeat(5, 1fr)}footer .site-navigation div h3{grid-column:span 2}.wrapper{margin:0 auto;width:1140px}div.container{padding:0 1rem}section.container{padding:6rem 6rem}.pad{padding:3rem}.wrapper.nopad{padding-bottom:0;padding-top:0}.center-content>.wrapper{display:flex;flex-direction:column;align-items:center}.center-content>.wrapper .title{width:50%;text-align:center}.light{background-color:#f9f9ff}.bg{background-size:cover;background-position:center;background-repeat:no-repeat}.two-elements{width:100%;display:flex;flex-direction:row;padding-top:2rem;padding-bottom:2rem;gap:2rem}.two-elements>*{width:50%}.three-elements{width:100%;display:grid;grid-template-columns:repeat(3, 1fr);padding-top:2rem;padding-bottom:2rem;gap:2rem}.four-elements{width:100%;display:grid;grid-template-columns:repeat(4, 1fr);padding-top:2rem;padding-bottom:2rem;gap:2rem}.img-right .text-wrapper{padding:4rem;display:flex;flex-direction:column;align-items:center;justify-content:center}.img-right .text-wrapper .text{width:50%;display:flex;flex-direction:column;justify-content:center;gap:1rem}.img-right .text-wrapper .text .button{align-self:center;margin:3rem}.img-right .img-wrapper img{width:100%}.home header.bg{background-image:url(../img/photos/home/hero-home.jpg);height:100vh}.blog header.bg{background-image:url(../img/photos/blog/hero-blog.jpg);height:35vh}header{z-index:-3;position:relative}header::before{background:#011;position:absolute;content:"";width:100%;height:100%;top:0;left:0;opacity:.6;z-index:-1}header .wrapper{display:flex;flex-direction:column;justify-content:center;color:#fff;height:100%}header .wrapper .title{display:flex;flex-direction:column;width:30%}header .wrapper .title>*{margin:1rem}nav{position:fixed;font-size:calc((16px + .16vw)*.6);color:#fff;width:100%}nav .social,nav .logo,nav .user-actions,nav .site-navigation{display:flex;gap:1rem}.nav-row{display:flex;width:100%;justify-content:space-between;align-items:center}.nav-row.upper{text-transform:initial;margin:1rem 0;padding-right:1rem;padding-left:1rem}.nav-row.highlight{font-weight:500;background-color:rgba(255,255,255,.2);margin:1rem 0;padding-right:1rem;padding-left:1rem;padding-top:1rem;padding-bottom:1rem;gap:1rem}.destinations .img-wrapper{position:relative}.destinations .img-wrapper div{position:absolute;top:0;left:0;width:100%;height:100%;color:#fff;display:flex;padding-top:.5rem;padding-bottom:.5rem;gap:.5rem;flex-direction:column;align-items:center;justify-content:center;z-index:1}.destinations .img-wrapper a{background-color:#fb0;display:block;padding:.25rem .75rem;opacity:0;transition:all .3s ease-in-out 0s}.destinations .img-wrapper:hover{cursor:pointer}.destinations .img-wrapper:hover a{opacity:1}.destinations .img-wrapper:hover:after{opacity:.3}.destinations .img-wrapper:after{content:"";position:absolute;background-color:#011;top:0;left:0;width:100%;height:100%;opacity:0;z-index:0;transition:all .3s ease-in-out 0s}.prices{background-image:url(../img/graphics/world.png)}.prices h3{padding-top:1rem;padding-bottom:1rem;gap:1rem;border-bottom:1px solid #fb0;background-color:#fff}.prices .price-table{display:grid;background-color:#fff;padding:1.25em 0;grid-template-columns:77% 20%;gap:.75em}.prices .price-table p,.prices .price-table a{line-height:2em}.prices .price-table a{font-weight:bold;text-align:center;background-color:#f9f9ff}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlbXBsYXRlLmNzcyIsImJhc2UvX3R5cG8uc2NzcyIsImhlbHBlcnMvX21peGlucy5zY3NzIiwiYmFzZS9fcmVzZXQuc2NzcyIsImNvbXBvbmVudHMvX2J1dHRvbnMuc2NzcyIsImhlbHBlcnMvX3ZhcmlhYmxlcy5zY3NzIiwiY29tcG9uZW50cy9fZm9ybXMuc2NzcyIsImNvbXBvbmVudHMvX2dhbGxlcnkuc2NzcyIsImNvbXBvbmVudHMvX2ZvbnRzLnNjc3MiLCJjb21wb25lbnRzL19zbGlkZXJzLnNjc3MiLCJjb21wb25lbnRzL19wb3N0cy5zY3NzIiwiZW1iZWRkZWQvX21hcC5zY3NzIiwibGF5b3V0L19mb290ZXIuc2NzcyIsImxheW91dC9fZ2VuZXJhbC5zY3NzIiwibGF5b3V0L19oZWFkZXIuc2NzcyIsImxheW91dC9fbmF2aWdhdGlvbi5zY3NzIiwicGFnZXMvX2hvbWUuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx1RkNBUSxDQUFBLHNCQ1NSLEtBQ0ksMEJBQ0ksQ0FBQSxTQUNBLENBQUEsR0FFSix1QkFDSSxDQUFBLFNBQ0EsQ0FBQSxDRGhCQSxjQ1NSLEtBQ0ksMEJBQ0ksQ0FBQSxTQUNBLENBQUEsR0FFSix1QkFDSSxDQUFBLFNBQ0EsQ0FBQSxDQUFBLHdCQUdSLEtBQ0ksMEJBQ0ksQ0FBQSxTQUNBLENBQUEsR0FFSix1QkFDSSxDQUFBLFNBQ0EsQ0FBQSxDQVZBLGdCQUdSLEtBQ0ksMEJBQ0ksQ0FBQSxTQUNBLENBQUEsR0FFSix1QkFDSSxDQUFBLFNBQ0EsQ0FBQSxDQUFBLHdCQUdSLEtBQ0ksbUJBQ0ksQ0FBQSxTQUNBLENBQUEsR0FFSixxQkFDSSxDQUFBLFNBQ0EsQ0FBQSxDQVZBLGdCQUdSLEtBQ0ksbUJBQ0ksQ0FBQSxTQUNBLENBQUEsR0FFSixxQkFDSSxDQUFBLFNBQ0EsQ0FBQSxDQUFBLHFCQ3BDUixrQkFHRSxDQUFBLFNBQ0EsQ0FBQSxRQUNBLENBQUEsS0FHRixnQkFDRSxDQUFBLHFCQUNBLENBQUEsZ0NB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Q2RuQlIsQ0FBQSxpQ2NzQkksY0FDSSxDQUFBLG1DQUNBLFNBQ0ksQ0FBQSx1Q0FFSixVQUNJLENBQUEsaUNBTVIsVUFDSSxDQUFBLGlCQUNBLENBQUEscUJYcENKLENBQUEsS1dzQ0ksQ0FBQSxNQUNBLENBQUEsVUFDQSxDQUFBLFdBQ0EsQ0FBQSxTQUNBLENBQUEsU0FDQSxDQUFBLGlDZDNDUixDQUFBLFFjaURKLCtDQUNJLENBQUEsV0FDQSxnQmRKQSxDQUFBLG1CQUNBLENBQUEsUUFDQSxDQUFBLDRCY0lJLENBQUEscUJYakRBLENBQUEscUJXb0RKLFlBQ0ksQ0FBQSxxQlhyREEsQ0FBQSxnQld1REEsQ0FBQSw2QkFDQSxDQUFBLFNBQ0EsQ0FBQSw4Q0FDQSxlQUNJLENBQUEsdUJBRUosZ0JBQ0ksQ0FBQSxpQkFDQSxDQUFBLHdCWGhFSiIsImZpbGUiOiJ0ZW1wbGF0ZS5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Qb3BwaW5zOndnaHRAMjAwOzMwMDs2MDAmZGlzcGxheT1zd2FwXCI7QGtleWZyYW1lcyB1cHtmcm9te3RyYW5zZm9ybTp0cmFuc2xhdGVZKDEwdmgpO29wYWNpdHk6MH10b3t0cmFuc2Zvcm06dHJhbnNsYXRlWSgwKTtvcGFjaXR5OjF9fUBrZXlmcmFtZXMgZG93bntmcm9te3RyYW5zZm9ybTp0cmFuc2xhdGVZKC0ydmgpO29wYWNpdHk6MH10b3t0cmFuc2Zvcm06dHJhbnNsYXRlWSgwKTtvcGFjaXR5OjF9fUBrZXlmcmFtZXMgem9vbXtmcm9te3RyYW5zZm9ybTpzY2FsZSgwJSk7b3BhY2l0eTowfXRve3RyYW5zZm9ybTpzY2FsZSgxMDAlKTtvcGFjaXR5OjF9fSosKjo6YmVmb3JlLCo6OmFmdGVye2JveC1zaXppbmc6aW5oZXJpdDtwYWRkaW5nOjA7bWFyZ2luOjB9aHRtbHtsaW5lLWhlaWdodDoxLjE1O2JveC1zaXppbmc6Ym9yZGVyLWJveDtmb250LWZhbWlseTpcIlJhbGV3YXlcIixzYW5zLXNlcmlmfW1haW57ZGlzcGxheTpibG9ja31oMXtmb250LXNpemU6MmVtO21hcmdpbjouNjdlbSAwfWF7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH1pbWd7ZGlzcGxheTpibG9ja31hYmJyW3RpdGxlXXstd2Via2l0LXRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmUgZG90dGVkO3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmUgZG90dGVkfWNvZGUsa2JkLHNhbXAscHJle2ZvbnQtZmFtaWx5Om1vbm9zcGFjZSxtb25vc3BhY2U7Zm9udC1zaXplOjFlbX1zdWIsc3Vwe2ZvbnQtc2l6ZTo3NSU7bGluZS1oZWlnaHQ6MDtwb3NpdGlvbjpyZWxhdGl2ZTt2ZXJ0aWNhbC1hbGlnbjpiYXNlbGluZX1zdWJ7Ym90dG9tOi0wLjI1ZW19c3Vwe3RvcDotMC41ZW19YnV0dG9uLGlucHV0LG9wdGdyb3VwLHNlbGVjdCx0ZXh0YXJlYXtsaW5lLWhlaWdodDppbmhlcml0O2JvcmRlcjoxcHggc29saWQgY3VycmVudENvbG9yfWJ1dHRvbntvdmVyZmxvdzp2aXNpYmxlO3RleHQtdHJhbnNmb3JtOm5vbmV9YnV0dG9uLFt0eXBlPWJ1dHRvbl0sW3R5cGU9cmVzZXRdLFt0eXBlPXN1Ym1pdF17LXdlYmtpdC1hcHBlYXJhbmNlOmJ1dHRvbjtwYWRkaW5nOjFweCA2cHh9aW5wdXR7b3ZlcmZsb3c6dmlzaWJsZX1pbnB1dCx0ZXh0YXJlYXtwYWRkaW5nOjFweH1maWVsZHNldHtib3JkZXI6MXB4IHNvbGlkIGN1cnJlbnRDb2xvcjttYXJnaW46MCAycHh9bGVnZW5ke2NvbG9yOmluaGVyaXQ7ZGlzcGxheTp0YWJsZTttYXgtd2lkdGg6MTAwJTt3aGl0ZS1zcGFjZTpub3JtYWx9cHJvZ3Jlc3N7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246YmFzZWxpbmV9c2VsZWN0e3RleHQtdHJhbnNmb3JtOm5vbmV9dGV4dGFyZWF7b3ZlcmZsb3c6YXV0bzt2ZXJ0aWNhbC1hbGlnbjp0b3B9W3R5cGU9c2VhcmNoXXstd2Via2l0LWFwcGVhcmFuY2U6dGV4dGZpZWxkO291dGxpbmUtb2Zmc2V0Oi0ycHh9W3R5cGU9Y29sb3Jde2JhY2tncm91bmQ6aW5oZXJpdH06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9ue2hlaWdodDphdXRvfTo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcntjb2xvcjppbmhlcml0O29wYWNpdHk6LjV9Ojotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uLDo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b257LXdlYmtpdC1hcHBlYXJhbmNlOmJ1dHRvbjtmb250OmluaGVyaXR9OjotbW96LWZvY3VzLWlubmVye2JvcmRlcjowfTotbW96LWZvY3VzcmluZ3tvdXRsaW5lOjFweCBkb3R0ZWQgQnV0dG9uVGV4dH06LW1vei11aS1pbnZhbGlke2JveC1zaGFkb3c6bm9uZX1ocntib3gtc2l6aW5nOmNvbnRlbnQtYm94O2hlaWdodDowO2NvbG9yOmluaGVyaXQ7b3ZlcmZsb3c6dmlzaWJsZX1kbCxvbCx1bHttYXJnaW46MWVtIDB9b2wgb2wsb2wgdWwsb2wgZGwsdWwgb2wsdWwgdWwsdWwgZGwsZGwgb2wsZGwgdWwsZGwgZGx7bWFyZ2luOjB9YixzdHJvbmd7Zm9udC13ZWlnaHQ6Ym9sZGVyfWF1ZGlvLHZpZGVve2Rpc3BsYXk6aW5saW5lLWJsb2NrfWF1ZGlvOm5vdChbY29udHJvbHNdKXtkaXNwbGF5Om5vbmU7aGVpZ2h0OjB9aW1ne2JvcmRlcjowfXN2Zzpub3QoOnJvb3Qpe292ZXJmbG93OmhpZGRlbn10YWJsZXt0ZXh0LWluZGVudDowO2JvcmRlci1jb2xvcjppbmhlcml0fWRldGFpbHN7ZGlzcGxheTpibG9ja31kaWFsb2d7YmFja2dyb3VuZC1jb2xvcjppbmhlcml0O2JvcmRlcjpzb2xpZDtjb2xvcjppbmhlcml0O2Rpc3BsYXk6YmxvY2s7aGVpZ2h0Oi13ZWJraXQtZml0LWNvbnRlbnQ7aGVpZ2h0Oi1tb3otZml0LWNvbnRlbnQ7aGVpZ2h0OmZpdC1jb250ZW50O2xlZnQ6MDttYXJnaW46YXV0bztwYWRkaW5nOjFlbTtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO3dpZHRoOi13ZWJraXQtZml0LWNvbnRlbnQ7d2lkdGg6LW1vei1maXQtY29udGVudDt3aWR0aDpmaXQtY29udGVudH1kaWFsb2c6bm90KFtvcGVuXSl7ZGlzcGxheTpub25lfXN1bW1hcnl7ZGlzcGxheTpsaXN0LWl0ZW19Y2FudmFze2Rpc3BsYXk6aW5saW5lLWJsb2NrfXRlbXBsYXRle2Rpc3BsYXk6bm9uZX1baGlkZGVuXXtkaXNwbGF5Om5vbmV9LmJ1dHRvbntwYWRkaW5nOjFyZW0gMmVtO2Rpc3BsYXk6YmxvY2s7d2lkdGg6Zml0LWNvbnRlbnR9LmJ1dHRvbi5sb29re2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojZmIwO3RyYW5zaXRpb246YWxsIC4zcyBlYXNlLWluLW91dCAwcztjdXJzb3I6cG9pbnRlcn0uYnV0dG9uLmxvb2s6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojMDExO2NvbG9yOiNmZmZ9LmJ1dHRvbi5yZXF1ZXN0e3RyYW5zaXRpb246YWxsIC4zcyBlYXNlLWluLW91dCAwcztjdXJzb3I6cG9pbnRlcjtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzAxMX0uYnV0dG9uLnJlcXVlc3Q6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZmIwO2NvbG9yOiNmZmZ9Zm9ybXtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3Bvc2l0aW9uOnJlbGF0aXZlfWZvcm0gOm50aC1vZi10eXBlKDEpe2ZsZXgtYmFzaXM6MTAwJX1mb3JtIDpudGgtb2YtdHlwZSgyKXtmbGV4LWJhc2lzOjUwcHh9Zm9ybSBpbnB1dHtoZWlnaHQ6M3JlbTtiYWNrZ3JvdW5kLWNvbG9yOiMwMTE7Ym9yZGVyLWNvbG9yOiM0NDQgdHJhbnNwYXJlbnQgIzQ0NCAjNDQ0O3BhZGRpbmc6MXJlbX1mb3JtIGlucHV0OmZvY3Vze291dGxpbmU6MXB4IHNvbGlkICNmYjB9Zm9ybSBpbnB1dDo6cGxhY2Vob2xkZXJ7Y29sb3I6IzQ0NH1mb3JtIGlucHV0W3R5cGU9c3VibWl0XXthc3BlY3QtcmF0aW86MTtiYWNrZ3JvdW5kLWNvbG9yOiNmYjA7Y3Vyc29yOnBvaW50ZXI7dGV4dC1pbmRlbnQ6LTk5OTk5cHh9Zm9ybSBzdmd7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MjRweDtyaWdodDoxM3B4fS5nYWxsZXJ5IC5ncmlke2Rpc3BsYXk6Z3JpZDtncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KDQsIDFmcik7Z3JpZC10ZW1wbGF0ZS1yb3dzOnJlcGVhdCgyLCAxZnIpO2dhcDouNzVyZW19LmdhbGxlcnkgLmdyaWQgYXtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCU7b3ZlcmZsb3c6aGlkZGVuO3otaW5kZXg6Mjtwb3NpdGlvbjpyZWxhdGl2ZX0uZ2FsbGVyeSAuZ3JpZCBhIGltZ3tkaXNwbGF5OmJsb2NrO29iamVjdC1maXQ6Y292ZXI7d2lkdGg6MTAwJX0uZ2FsbGVyeSAuZ3JpZCBhOm50aC1vZi10eXBlKG4rMTMpe2Rpc3BsYXk6bm9uZX0uZ2FsbGVyeSAuZ3JpZCBhOjpiZWZvcmV7YmFja2dyb3VuZDojZmIwO3Bvc2l0aW9uOmFic29sdXRlO2NvbnRlbnQ6XCJcIjt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO3RvcDowO2xlZnQ6MDtvcGFjaXR5OjA7ei1pbmRleDo0fS5nYWxsZXJ5IC5ncmlkIGE6OmJlZm9yZXt0cmFuc2l0aW9uOmFsbCAuMnMgZWFzZS1pbi1vdXQgMHN9LmdhbGxlcnkgLmdyaWQgYTpob3Zlcjo6YmVmb3Jle29wYWNpdHk6LjZ9Ym9keSBoMSxib2R5IGgyLGJvZHkgaDMsYm9keSBoNHtmb250LWZhbWlseTpcIlBvcHBpbnNcIixcIkdpbGwgU2Fuc1wiLFwiR2lsbCBTYW5zIE1UXCIsQ2FsaWJyaSxcIlRyZWJ1Y2hldCBNU1wiLHNhbnMtc2VyaWY7Zm9udC13ZWlnaHQ6NjAwfWJvZHkgcCxib2R5IGEsYm9keSBpbnB1dHtmb250LWZhbWlseTpcIlBvcHBpbnNcIixBcmlhbCxIZWx2ZXRpY2Esc2Fucy1zZXJpZjtmb250LXdlaWdodDozMDB9Ym9keSBhe3RleHQtZGVjb3JhdGlvbjpub25lO3RleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtjb2xvcjppbmhlcml0fXNwYW4uaGVhcnR7Zm9udC1zaXplOjB9c3Bhbi5oZWFydDo6YmVmb3Jle2NvbnRlbnQ6XCLinaRcIjtmb250LXNpemU6aW5pdGlhbH1oMXt0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2V9LnN1cGVye3RleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtmb250LXNpemU6Y2FsYygoMjBweCArIC4ydncpKi42NSl9LnJldmlld3Mtc2xpZGVye2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXJ9LnJldmlld3Mtc2xpZGVyIC5yZXZpZXd7d2lkdGg6NTAlO3BhZGRpbmc6MWVtO2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpyb3c7YWxpZ24taXRlbXM6ZmxleC1zdGFydDtjb2xvcjojMjIyO2JhY2tncm91bmQtY29sb3I6I2ZmZn1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCl7LnJldmlld3Mtc2xpZGVyIC5yZXZpZXd7d2lkdGg6MTAwJX19LnJldmlld3Mtc2xpZGVyIC5yZXZpZXcgLmltZy13cmFwcGVye2JvcmRlci1yYWRpdXM6OTk5cHg7b3ZlcmZsb3c6aGlkZGVuO3dpZHRoOjZyZW07aGVpZ2h0OmZpdC1jb250ZW50O2FzcGVjdC1yYXRpbzoxO21hcmdpbjouNXJlbSAxcmVtfS5yZXZpZXdzLXNsaWRlciAucmV2aWV3IC5pbWctd3JhcHBlciBpbWd7d2lkdGg6MTAwJX0ucmV2aWV3cy1zbGlkZXIgLnJldmlldyBmaWd1cmU+KnttYXJnaW46LjVyZW19LnJldmlld3Mtc2xpZGVyIC5yZXZpZXcgZmlndXJlIC5zdGFyc3stLXBlcmNlbnQ6IGNhbGModmFyKC0tcmF0aW5nKSAvIDUgKiAxMDAlKTtkaXNwbGF5OmlubGluZS1ibG9jaztmb250LXNpemU6MnJlbTtsaW5lLWhlaWdodDoxfS5yZXZpZXdzLXNsaWRlciAucmV2aWV3IGZpZ3VyZSAuc3RhcnM6OmJlZm9yZXtjb250ZW50Olwi4piF4piF4piF4piF4piFXCI7bGV0dGVyLXNwYWNpbmc6M3B4O2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDkwZGVnLCAjZmIwIHZhcigtLXBlcmNlbnQpLCAjNDQ0IHZhcigtLXBlcmNlbnQpKTtiYWNrZ3JvdW5kLWNsaXA6dGV4dDstd2Via2l0LXRleHQtZmlsbC1jb2xvcjp0cmFuc3BhcmVudH1hcnRpY2xlIC50YWdzIGF7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6Zml0LWNvbnRlbnQ7cGFkZGluZzouMjVyZW0gLjc1cmVtO2JvcmRlcjoxcHggc29saWQgI2Y5ZjlmZjttYXJnaW46Ljc1cmVtIC4yNXJlbTt0cmFuc2l0aW9uOmFsbCAuM3MgZWFzZS1pbi1vdXQgMHM7Y3Vyc29yOnBvaW50ZXJ9YXJ0aWNsZSAudGFncyBhOmZpcnN0LW9mLXR5cGV7bWFyZ2luLWxlZnQ6MH1hcnRpY2xlIC50YWdzIGE6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZmIwO2NvbG9yOiNmZmZ9Lm1hcG91dGVye3Bvc2l0aW9uOnJlbGF0aXZlO3RleHQtYWxpZ246cmlnaHQ7aGVpZ2h0OjUwMHB4O3dpZHRoOjEwMCU7Ym94LXNpemluZzpjb250ZW50LWJveDtib3JkZXI6LjVyZW0gc29saWQgI2ZmZjtib3JkZXItcmFkaXVzOjFyZW19Lm1hcG91dGVyIC5nbWFwX2NhbnZhc3tvdmVyZmxvdzpoaWRkZW47YmFja2dyb3VuZDpub25lICFpbXBvcnRhbnQ7aGVpZ2h0OjUwMHB4fWZvb3Rlcnt3aWR0aDoxMDAlO2JhY2tncm91bmQtY29sb3I6IzAxMTtjb2xvcjojNDQ0O3BhZGRpbmctdG9wOjRyZW07cGFkZGluZy1ib3R0b206NHJlbTtnYXA6NHJlbX1mb290ZXI6bm90KDpsYXN0LW9mLXR5cGUpe3BhZGRpbmctYm90dG9tOjB9Zm9vdGVyOm5vdCg6Zmlyc3Qtb2YtdHlwZSl7cGFkZGluZy10b3A6MH1mb290ZXIuaW5mbz4qe2Rpc3BsYXk6Z3JpZDtncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KDQsIDFmcik7Z2FwOjFyZW19Zm9vdGVyLmxpbmtzPip7cGFkZGluZy10b3A6MnJlbTtwYWRkaW5nLWJvdHRvbToycmVtO2dhcDoycmVtO2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjtmbGV4LWRpcmVjdGlvbjpyb3ctcmV2ZXJzZTtib3JkZXItdG9wOjFweCBzb2xpZCAjMjIyfWZvb3Rlci5saW5rcz4qIGEsZm9vdGVyLmxpbmtzPiogc3Bhbntjb2xvcjojZmIwfWZvb3Rlci5saW5rcz4qIC5zb2NpYWx7ZGlzcGxheTpmbGV4O2dhcDoxcmVtfWZvb3RlciBoMSxmb290ZXIgaDIsZm9vdGVyIGgzLGZvb3RlciBoNHtjb2xvcjojZmZmO3RleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtmb250LXNpemU6Y2FsYygoMjBweCArIC4ydncpKi43NSl9Zm9vdGVyIHAsZm9vdGVyIGF7dGV4dC10cmFuc2Zvcm06aW5pdGlhbDtmb250LXNpemU6Y2FsYygoMTZweCArIC4xNnZ3KSouNzUpfWZvb3RlciBoMytwLGZvb3RlciBoMytkaXZ7cGFkZGluZy10b3A6MS43NXJlbTtwYWRkaW5nLWJvdHRvbToxLjc1cmVtO2dhcDoxLjc1cmVtfWZvb3RlciAuc2l0ZS1uYXZpZ2F0aW9uIGRpdntkaXNwbGF5OmdyaWQ7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOnJlcGVhdCgyLCAxZnIpO2dyaWQtdGVtcGxhdGUtcm93czpyZXBlYXQoNSwgMWZyKX1mb290ZXIgLnNpdGUtbmF2aWdhdGlvbiBkaXYgaDN7Z3JpZC1jb2x1bW46c3BhbiAyfS53cmFwcGVye21hcmdpbjowIGF1dG87d2lkdGg6MTE0MHB4fWRpdi5jb250YWluZXJ7cGFkZGluZzowIDFyZW19c2VjdGlvbi5jb250YWluZXJ7cGFkZGluZzo2cmVtIDZyZW19LnBhZHtwYWRkaW5nOjNyZW19LndyYXBwZXIubm9wYWR7cGFkZGluZy1ib3R0b206MDtwYWRkaW5nLXRvcDowfS5jZW50ZXItY29udGVudD4ud3JhcHBlcntkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2FsaWduLWl0ZW1zOmNlbnRlcn0uY2VudGVyLWNvbnRlbnQ+LndyYXBwZXIgLnRpdGxle3dpZHRoOjUwJTt0ZXh0LWFsaWduOmNlbnRlcn0ubGlnaHR7YmFja2dyb3VuZC1jb2xvcjojZjlmOWZmfS5iZ3tiYWNrZ3JvdW5kLXNpemU6Y292ZXI7YmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXI7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0fS50d28tZWxlbWVudHN7d2lkdGg6MTAwJTtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246cm93O3BhZGRpbmctdG9wOjJyZW07cGFkZGluZy1ib3R0b206MnJlbTtnYXA6MnJlbX0udHdvLWVsZW1lbnRzPip7d2lkdGg6NTAlfS50aHJlZS1lbGVtZW50c3t3aWR0aDoxMDAlO2Rpc3BsYXk6Z3JpZDtncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KDMsIDFmcik7cGFkZGluZy10b3A6MnJlbTtwYWRkaW5nLWJvdHRvbToycmVtO2dhcDoycmVtfS5mb3VyLWVsZW1lbnRze3dpZHRoOjEwMCU7ZGlzcGxheTpncmlkO2dyaWQtdGVtcGxhdGUtY29sdW1uczpyZXBlYXQoNCwgMWZyKTtwYWRkaW5nLXRvcDoycmVtO3BhZGRpbmctYm90dG9tOjJyZW07Z2FwOjJyZW19LmltZy1yaWdodCAudGV4dC13cmFwcGVye3BhZGRpbmc6NHJlbTtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2FsaWduLWl0ZW1zOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS5pbWctcmlnaHQgLnRleHQtd3JhcHBlciAudGV4dHt3aWR0aDo1MCU7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2dhcDoxcmVtfS5pbWctcmlnaHQgLnRleHQtd3JhcHBlciAudGV4dCAuYnV0dG9ue2FsaWduLXNlbGY6Y2VudGVyO21hcmdpbjozcmVtfS5pbWctcmlnaHQgLmltZy13cmFwcGVyIGltZ3t3aWR0aDoxMDAlfS5ob21lIGhlYWRlci5iZ3tiYWNrZ3JvdW5kLWltYWdlOnVybCguLi9pbWcvcGhvdG9zL2hvbWUvaGVyby1ob21lLmpwZyk7aGVpZ2h0OjEwMHZofS5ibG9nIGhlYWRlci5iZ3tiYWNrZ3JvdW5kLWltYWdlOnVybCguLi9pbWcvcGhvdG9zL2Jsb2cvaGVyby1ibG9nLmpwZyk7aGVpZ2h0OjM1dmh9aGVhZGVye3otaW5kZXg6LTM7cG9zaXRpb246cmVsYXRpdmV9aGVhZGVyOjpiZWZvcmV7YmFja2dyb3VuZDojMDExO3Bvc2l0aW9uOmFic29sdXRlO2NvbnRlbnQ6XCJcIjt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO3RvcDowO2xlZnQ6MDtvcGFjaXR5Oi42O3otaW5kZXg6LTF9aGVhZGVyIC53cmFwcGVye2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47anVzdGlmeS1jb250ZW50OmNlbnRlcjtjb2xvcjojZmZmO2hlaWdodDoxMDAlfWhlYWRlciAud3JhcHBlciAudGl0bGV7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjt3aWR0aDozMCV9aGVhZGVyIC53cmFwcGVyIC50aXRsZT4qe21hcmdpbjoxcmVtfW5hdntwb3NpdGlvbjpmaXhlZDtmb250LXNpemU6Y2FsYygoMTZweCArIC4xNnZ3KSouNik7Y29sb3I6I2ZmZjt3aWR0aDoxMDAlfW5hdiAuc29jaWFsLG5hdiAubG9nbyxuYXYgLnVzZXItYWN0aW9ucyxuYXYgLnNpdGUtbmF2aWdhdGlvbntkaXNwbGF5OmZsZXg7Z2FwOjFyZW19Lm5hdi1yb3d7ZGlzcGxheTpmbGV4O3dpZHRoOjEwMCU7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47YWxpZ24taXRlbXM6Y2VudGVyfS5uYXYtcm93LnVwcGVye3RleHQtdHJhbnNmb3JtOmluaXRpYWw7bWFyZ2luOjFyZW0gMDtwYWRkaW5nLXJpZ2h0OjFyZW07cGFkZGluZy1sZWZ0OjFyZW19Lm5hdi1yb3cuaGlnaGxpZ2h0e2ZvbnQtd2VpZ2h0OjUwMDtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjIpO21hcmdpbjoxcmVtIDA7cGFkZGluZy1yaWdodDoxcmVtO3BhZGRpbmctbGVmdDoxcmVtO3BhZGRpbmctdG9wOjFyZW07cGFkZGluZy1ib3R0b206MXJlbTtnYXA6MXJlbX0uZGVzdGluYXRpb25zIC5pbWctd3JhcHBlcntwb3NpdGlvbjpyZWxhdGl2ZX0uZGVzdGluYXRpb25zIC5pbWctd3JhcHBlciBkaXZ7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7Y29sb3I6I2ZmZjtkaXNwbGF5OmZsZXg7cGFkZGluZy10b3A6LjVyZW07cGFkZGluZy1ib3R0b206LjVyZW07Z2FwOi41cmVtO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjt6LWluZGV4OjF9LmRlc3RpbmF0aW9ucyAuaW1nLXdyYXBwZXIgYXtiYWNrZ3JvdW5kLWNvbG9yOiNmYjA7ZGlzcGxheTpibG9jaztwYWRkaW5nOi4yNXJlbSAuNzVyZW07b3BhY2l0eTowO3RyYW5zaXRpb246YWxsIC4zcyBlYXNlLWluLW91dCAwc30uZGVzdGluYXRpb25zIC5pbWctd3JhcHBlcjpob3ZlcntjdXJzb3I6cG9pbnRlcn0uZGVzdGluYXRpb25zIC5pbWctd3JhcHBlcjpob3ZlciBhe29wYWNpdHk6MX0uZGVzdGluYXRpb25zIC5pbWctd3JhcHBlcjpob3ZlcjphZnRlcntvcGFjaXR5Oi4zfS5kZXN0aW5hdGlvbnMgLmltZy13cmFwcGVyOmFmdGVye2NvbnRlbnQ6XCJcIjtwb3NpdGlvbjphYnNvbHV0ZTtiYWNrZ3JvdW5kLWNvbG9yOiMwMTE7dG9wOjA7bGVmdDowO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7b3BhY2l0eTowO3otaW5kZXg6MDt0cmFuc2l0aW9uOmFsbCAuM3MgZWFzZS1pbi1vdXQgMHN9LnByaWNlc3tiYWNrZ3JvdW5kLWltYWdlOnVybCguLi9pbWcvZ3JhcGhpY3Mvd29ybGQucG5nKX0ucHJpY2VzIGgze3BhZGRpbmctdG9wOjFyZW07cGFkZGluZy1ib3R0b206MXJlbTtnYXA6MXJlbTtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZmIwO2JhY2tncm91bmQtY29sb3I6I2ZmZn0ucHJpY2VzIC5wcmljZS10YWJsZXtkaXNwbGF5OmdyaWQ7YmFja2dyb3VuZC1jb2xvcjojZmZmO3BhZGRpbmc6MS4yNWVtIDA7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOjc3JSAyMCU7Z2FwOi43NWVtfS5wcmljZXMgLnByaWNlLXRhYmxlIHAsLnByaWNlcyAucHJpY2UtdGFibGUgYXtsaW5lLWhlaWdodDoyZW19LnByaWNlcyAucHJpY2UtdGFibGUgYXtmb250LXdlaWdodDpib2xkO3RleHQtYWxpZ246Y2VudGVyO2JhY2tncm91bmQtY29sb3I6I2Y5ZjlmZn0iLCJAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Qb3BwaW5zOndnaHRAMjAwOzMwMDs2MDAmZGlzcGxheT1zd2FwJyk7IiwiLy8gbWl4aW4gZGUgdHJhbnNpdGlvbnNcclxuQG1peGluIHRyYW5zaXRpb24tZWNsYWlyKCRzY29wZTogYWxsLCAkZHVyZWU6IC4zcywgJGRlbGFpOiAwcykge1xyXG4gICAgdHJhbnNpdGlvbjogJHNjb3BlICRkdXJlZSBlYXNlLWluLW91dCAkZGVsYWk7XHJcbn1cclxuXHJcbkBtaXhpbiBhbmltYXRpb24oJG5vbSwgJGR1cmVlOiAuM3MsICRkZWxhaTogMHMpIHtcclxuICAgIGFuaW1hdGlvbjogJG5vbSAkZHVyZWUgZWFzZS1pbi1vdXQgJGRlbGFpIGJhY2t3YXJkcztcclxufSBcclxuXHJcbkBrZXlmcmFtZXMgdXAge1xyXG4gICAgZnJvbSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwdmgpO1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICB9XHJcbiAgICB0byB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICB9XHJcbn1cclxuQGtleWZyYW1lcyBkb3duIHtcclxuICAgIGZyb20ge1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnZoKTtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgfVxyXG4gICAgdG8ge1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG59XHJcbkBrZXlmcmFtZXMgem9vbSB7XHJcbiAgICBmcm9tIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAlKTtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgfVxyXG4gICAgdG8ge1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMTAwJSk7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxufVxyXG5cclxuLy9mbGV4ZXIgZXQgY2VudHJlclxyXG5AbWl4aW4gZmxleC1hdXRvICgkZGlzcGxheTogZmxleCwgJGRpcmVjdGlvbjogcm93LCAkanVzdGlmeTogY2VudGVyLCAkYWxpZ246IGNlbnRlcikge1xyXG4gICAgZGlzcGxheTogJGRpc3BsYXk7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogJGRpcmVjdGlvbjtcclxuICAgIGp1c3RpZnktY29udGVudDogJGp1c3RpZnk7XHJcbiAgICBhbGlnbi1pdGVtczogJGFsaWduO1xyXG59XHJcblxyXG5AbWl4aW4gaW5uZXItc3BhY2luZyAoJHVuaXQ6IDEpIHtcclxuICAgIHBhZGRpbmctdG9wOiBjYWxjKCRzcGFjZSAqICR1bml0KTtcclxuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKCRzcGFjZSAqICR1bml0KTtcclxuICAgIGdhcDogY2FsYygkc3BhY2UgKiAkdW5pdCk7XHJcbn1cclxuXHJcbkBtaXhpbiBvdXRlci1zcGFjaW5nICgkdW5pdDogMSkge1xyXG4gICAgbWFyZ2luOiBjYWxjKCRzcGFjZSAqICR1bml0KSAwO1xyXG4gICAgcGFkZGluZy1yaWdodDogY2FsYygkc3BhY2UgKiAkdW5pdCk7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IGNhbGMoJHNwYWNlICogJHVuaXQpXHJcbn1cclxuXHJcbkBtaXhpbiB0eXBlICgkc2l6ZTogc2l6ZSkge1xyXG4gICAgZm9udC1zaXplOiBjYWxjKCRzaXplICogLjFlbSArICRzaXplICogMXB4KTtcclxufVxyXG5cclxuLy9idXR0b25cclxuQG1peGluIGJ1dHRvbiAoJGJvcmRlclN0eWxlOiBzb2xpZCAxcHgsICRib3JkZXItcmFkaXVzOiAwLCAkcGFkZGluZzogMWVtIDEuNWVtLCAkY29sb3I6ICMzMzMpIHtcclxuICAgIGJvcmRlcjogJGJvcmRlciAkY29sb3I7XHJcbiAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcclxuICAgIHBhZGRpbmc6ICRwYWRkaW5nO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBjb2xvcjogIzMzMztcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XHJcbn1cclxuXHJcbi8vIGhvdmVyXHJcbkBtaXhpbiBob3ZlcmFibGUgKCRjaGlsZHJlbjogZmFsc2UsICRiYWNrZ3JvdW5kOiBmYWxzZSwgJHllbGxvd2lmeTogZmFsc2UpIHtcclxuICAgIEBpbmNsdWRlIHRyYW5zaXRpb24tZWNsYWlyO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgJjpob3ZlciAge1xyXG4gICAgICAgIEBpZiAoJGJhY2tncm91bmQpIHtcclxuICAgICAgICAgICAgQGlmICgkeWVsbG93aWZ5KSB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeWVsbG93O1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBAZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmxhY2s7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEBlbHNlIHtcclxuICAgICAgICAgICAgQGlmICgkeWVsbG93aWZ5KSB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJHllbGxvdztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBAZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEBpZiAoJGNoaWxkcmVuKSB7XHJcbiAgICAgICAgICAgICoge1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbi1lY2xhaXI7XHJcbiAgICAgICAgICAgICAgICBAaWYgKCRiYWNrZ3JvdW5kKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgQGlmICgkbGlnaHRlbikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeWVsbG93O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBAZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRibGFjaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBAZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgQGlmICgkbGlnaHRlbikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHllbGxvdztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgQGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLy8gb3ZlcmxheSBhZnRlclxyXG5AbWl4aW4gb3ZlcmxheS1hZnRlciAoJGJnOiAkYmxhY2ssICRvcGFjaXR5OiAuMywgJHotaW5kZXg6IC0xKSB7XHJcbiAgICB6LWluZGV4OiAkei1pbmRleDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAkYmc7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICBvcGFjaXR5OiAkb3BhY2l0eTtcclxuICAgICAgICB6LWluZGV4OiAkei1pbmRleCArIDE7XHJcbiAgICB9XHJcbiAgICAqIHtcclxuICAgICAgICB6LWluZGV4OiAkei1pbmRleCArIDM7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIG92ZXJsYXkgYmVmb3JlXHJcbkBtaXhpbiBvdmVybGF5LWJlZm9yZSAoJGJnOiAjMzMzLCAkb3BhY2l0eTogLjMsICR6LWluZGV4OiAtMSkge1xyXG4gICAgei1pbmRleDogJHotaW5kZXg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICRiZztcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIG9wYWNpdHk6ICRvcGFjaXR5O1xyXG4gICAgICAgIHotaW5kZXg6ICR6LWluZGV4ICsgMjtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbi8vY2FycmUgXHJcbkBtaXhpbiBjYXJyZSAoJHNpemU6IDE1MHB4KSB7XHJcbiAgICB3aWR0aDogJHNpemU7XHJcbiAgICBoZWlnaHQ6ICRzaXplO1xyXG59XHJcblxyXG4vL2NlcmNsZSBcclxuQG1peGluIGNlcmNsZSAoJHNpemU6IDE1MHB4KSB7XHJcbiAgICBib3JkZXItcmFkaXVzOiA5OTlweDtcclxuICAgIEBpbmNsdWRlIGNhcnJlKCRzaXplKTtcclxufVxyXG5cclxuXHJcbi8vbmF2XHJcbkBtaXhpbiBuYXYtZml4ZSAoJGJhY2tncm91bmQtY29sb3I6ICMzMzMsJGNvbG9yOiAjZmZmLCAkZGlyZWN0aW9uOiByb3csICRmaXhlZDogdHJ1ZSkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmQtY29sb3I7XHJcblxyXG4gICAgQGlmICRmaXhlZCB7XHJcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICByaWdodDogMDtcclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XHJcbiAgICB9XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMmVtO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiAkZGlyZWN0aW9uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgYSB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBmb250YXdlc29tZS1saXN0ICgkcGFkZGluZzogMS4zZW0pIHtcclxuICAgIHVsIHtcclxuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICB9XHJcbiAgICBsaSB7XHJcbiAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IEZvbnRBd2Vzb21lO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiBjYWxjICgwIC0gJHBhZGRpbmcpO1xyXG4gICAgICAgICAgICB3aWR0aDogJHBhZGRpbmc7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogY2FsYygkcGFkZGluZyAvIDIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLy8gYWRhcGF0aW9uIGR1IGRpc3BsYXkgZW4gdmVydGljYWxcclxuQG1peGluIGNvbnZlcnQtdG8tdmVydGljYWwoJGRpc3BsYXk6IGZsZXgsICRzY3JlZW46ICRzbWFsbC1zY3JlZW4sICRyZXNpemUtaXRlbXM6ICR3aWR0aCwgJGdhcDogMnJlbSkge1xyXG4gICAgQGlmICgkc2NyZWVuID09ICRzbWFsbC1zY3JlZW4pIHtcclxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHNtYWxsLXNjcmVlbikge1xyXG4gICAgICAgICAgICBAaWYgKCRkaXNwbGF5ID09IGZsZXgpIHtcclxuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgICBnYXA6ICRnYXA7XHJcbiAgICAgICAgICAgICAgICBAaWYgKCRyZXNpemUtaXRlbXMgPT0gZGVmYXVsdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICY+KiB7IHdpZHRoOiB1bnNldDsgfVxyXG4gICAgICAgICAgICAgICAgfSBAZWxzZSBpZiAoJHJlc2l6ZS1pdGVtcyA9PSBmdWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJj4qIHsgd2lkdGg6IDEwMCU7IH1cclxuICAgICAgICAgICAgICAgIH0gQGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICY+KiB7IHdpZHRoOiAkd2lkdGggfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSBAZWxzZSBpZiAoJHNjcmVlbiA9PSAkdGFibGV0KSB7XHJcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHRhYmxldCkge1xyXG4gICAgICAgICAgICBAaWYgKCRkaXNwbGF5ID09IGZsZXgpIHtcclxuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgICBnYXA6ICRnYXA7XHJcbiAgICAgICAgICAgICAgICBAaWYgKCRyZXNpemUtaXRlbXMgPT0gZGVmYXVsdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICY+KiB7IHdpZHRoOiB1bnNldDsgfVxyXG4gICAgICAgICAgICAgICAgfSBAZWxzZSBpZiAoJHJlc2l6ZS1pdGVtcyA9PSBmdWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJj4qIHsgd2lkdGg6IDEwMCU7IH1cclxuICAgICAgICAgICAgICAgIH0gQGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICY+KiB7IHdpZHRoOiAkd2lkdGggfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSBAZWxzZSB7XHJcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHNtYXJ0cGhvbmUpIHtcclxuICAgICAgICAgICAgQGlmICgkZGlzcGxheSA9PSBmbGV4KSB7XHJcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICAgICAgZ2FwOiAkZ2FwO1xyXG4gICAgICAgICAgICAgICAgQGlmICgkcmVzaXplLWl0ZW1zID09IGRlZmF1bHQpIHtcclxuICAgICAgICAgICAgICAgICAgICAmPiogeyB3aWR0aDogdW5zZXQ7IH1cclxuICAgICAgICAgICAgICAgIH0gQGVsc2UgaWYgKCRyZXNpemUtaXRlbXMgPT0gZnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICY+KiB7IHdpZHRoOiAxMDAlOyB9XHJcbiAgICAgICAgICAgICAgICB9IEBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAmPiogeyB3aWR0aDogJHdpZHRoIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLy8gcydhcHBsaXF1ZSBzdXIgdW4gY29udGFpbmVyIDsgLyFcXCB1dGlsaXNlIGZsZXhcclxuQG1peGluIHNpZGUtcmliYm9uICgkcmVzaXplOiAkc21hbGwtc2NyZWVuKSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkcmVzaXplKSB7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIH1cclxuICAgIC5zaWRlLXJpYmJvbiB7XHJcbiAgICAgICAgd2lkdGg6IDJlbTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgcGFkZGluZzogY2FsYygkZ2FwICogMik7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiBjYWxjKDByZW0gLSAoNCAqICRnYXApKTtcclxuICAgICAgICBtYXJnaW4tbGVmdDogY2FsYygwcmVtIC0gJGdhcCk7XHJcbiAgICAgICAgei1pbmRleDogMjtcclxuICAgICAgICB3cml0aW5nLW1vZGU6IHZlcnRpY2FsLWxyO1xyXG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRyZXNpemUpIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMmVtO1xyXG4gICAgICAgICAgICB3cml0aW5nLW1vZGU6IGhvcml6b250YWwtdGI7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IGNhbGMoMHJlbSAtICg0ICogJGdhcCkpO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiBjYWxjKDByZW0gLSAkZ2FwKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIqLFxyXG4qOjpiZWZvcmUsXHJcbio6OmFmdGVyIHtcclxuICBib3gtc2l6aW5nOiBpbmhlcml0O1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG5odG1sIHtcclxuICBsaW5lLWhlaWdodDogMS4xNTtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbm1haW4ge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG5oMSB7XHJcbiAgZm9udC1zaXplOiAyZW07XHJcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcclxufVxyXG5cclxuYSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbmltZyB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbmFiYnJbdGl0bGVdIHtcclxuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcclxuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcclxufVxyXG5cclxuY29kZSxcclxua2JkLFxyXG5zYW1wLFxyXG5wcmUge1xyXG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcclxuICBmb250LXNpemU6IDFlbTtcclxufVxyXG5cclxuc3ViLFxyXG5zdXAge1xyXG4gIGZvbnQtc2l6ZTogNzUlO1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuXHJcbnN1YiB7XHJcbiAgYm90dG9tOiAtMC4yNWVtO1xyXG59XHJcblxyXG5zdXAge1xyXG4gIHRvcDogLTAuNWVtO1xyXG59XHJcblxyXG5idXR0b24sXHJcbmlucHV0LFxyXG5vcHRncm91cCxcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSB7XHJcbiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgY3VycmVudENvbG9yO1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xyXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG59XHJcblxyXG5idXR0b24sXHJcblt0eXBlPWJ1dHRvbl0sXHJcblt0eXBlPXJlc2V0XSxcclxuW3R5cGU9c3VibWl0XSB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XHJcbiAgcGFkZGluZzogMXB4IDZweDtcclxufVxyXG5cclxuaW5wdXQge1xyXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xyXG59XHJcblxyXG5pbnB1dCxcclxudGV4dGFyZWEge1xyXG4gIHBhZGRpbmc6IDFweDtcclxufVxyXG5cclxuZmllbGRzZXQge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIGN1cnJlbnRDb2xvcjtcclxuICBtYXJnaW46IDAgMnB4O1xyXG59XHJcblxyXG5sZWdlbmQge1xyXG4gIGNvbG9yOiBpbmhlcml0O1xyXG4gIGRpc3BsYXk6IHRhYmxlO1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG59XHJcblxyXG5wcm9ncmVzcyB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuc2VsZWN0IHtcclxuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcclxufVxyXG5cclxudGV4dGFyZWEge1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbn1cclxuXHJcblt0eXBlPXNlYXJjaF0ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xyXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xyXG59XHJcblxyXG5bdHlwZT1jb2xvcl0ge1xyXG4gIGJhY2tncm91bmQ6IGluaGVyaXQ7XHJcbn1cclxuXHJcbjo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcclxuOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcclxuICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgY29sb3I6IGluaGVyaXQ7XHJcbiAgb3BhY2l0eTogMC41O1xyXG59XHJcblxyXG46Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24sXHJcbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xyXG4gIGZvbnQ6IGluaGVyaXQ7XHJcbn1cclxuXHJcbjo6LW1vei1mb2N1cy1pbm5lciB7XHJcbiAgYm9yZGVyOiAwO1xyXG59XHJcblxyXG46LW1vei1mb2N1c3Jpbmcge1xyXG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcclxufVxyXG5cclxuOi1tb3otdWktaW52YWxpZCB7XHJcbiAgYm94LXNoYWRvdzogbm9uZTtcclxufVxyXG5cclxuaHIge1xyXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xyXG4gIGhlaWdodDogMDtcclxuICBjb2xvcjogaW5oZXJpdDtcclxuICBvdmVyZmxvdzogdmlzaWJsZTtcclxufVxyXG5cclxuZGwsXHJcbm9sLFxyXG51bCB7XHJcbiAgbWFyZ2luOiAxZW0gMDtcclxufVxyXG5cclxub2wgb2wsXHJcbm9sIHVsLFxyXG5vbCBkbCxcclxudWwgb2wsXHJcbnVsIHVsLFxyXG51bCBkbCxcclxuZGwgb2wsXHJcbmRsIHVsLFxyXG5kbCBkbCB7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG5iLFxyXG5zdHJvbmcge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XHJcbn1cclxuXHJcbmF1ZGlvLFxyXG52aWRlbyB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgaGVpZ2h0OiAwO1xyXG59XHJcblxyXG5pbWcge1xyXG4gIGJvcmRlcjogMDtcclxufVxyXG5cclxuc3ZnOm5vdCg6cm9vdCkge1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbnRhYmxlIHtcclxuICB0ZXh0LWluZGVudDogMDtcclxuICBib3JkZXItY29sb3I6IGluaGVyaXQ7XHJcbn1cclxuXHJcbmRldGFpbHMge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG5kaWFsb2cge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XHJcbiAgYm9yZGVyOiBzb2xpZDtcclxuICBjb2xvcjogaW5oZXJpdDtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBoZWlnaHQ6IC13ZWJraXQtZml0LWNvbnRlbnQ7XHJcbiAgaGVpZ2h0OiAtbW96LWZpdC1jb250ZW50O1xyXG4gIGhlaWdodDogZml0LWNvbnRlbnQ7XHJcbiAgbGVmdDogMDtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgcGFkZGluZzogMWVtO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICByaWdodDogMDtcclxuICB3aWR0aDogLXdlYmtpdC1maXQtY29udGVudDtcclxuICB3aWR0aDogLW1vei1maXQtY29udGVudDtcclxuICB3aWR0aDogZml0LWNvbnRlbnQ7XHJcbn1cclxuXHJcbmRpYWxvZzpub3QoW29wZW5dKSB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuc3VtbWFyeSB7XHJcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xyXG59XHJcblxyXG5jYW52YXMge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG5cclxudGVtcGxhdGUge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbltoaWRkZW5dIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59IiwiLy8gQWZmZWN0ZSB0b3VzIGxlcyBib3V0b25zIChjbGFzc2UgLmJ1dHRvbilcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gdHlwZSAubG9va1xyXG4vLyBIVE1MIHwgPGEgaHJlZj1cIiNcIiBjbGFzcz1cImJ1dHRvbiBsb29rXCI+U2VlIG91ciBtZW51PC9hPlxyXG4vLyDilIzilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilJBcclxuLy8g4pSCIFNlZSBvdXIgbWVudSDilIJcclxuLy8g4pSU4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSYXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFR5cGUgLmdvXHJcbi8vIEhUTUwgfCA8YSBocmVmPVwiI1wiIGNsYXNzPVwiYnV0dG9uIGdvXCI+T3VyIHN0b3J5PC9hPlxyXG4vLyBPdXIgc3RvcnkgIOKGklxyXG4uYnV0dG9uIHtcclxuICAgIHBhZGRpbmc6ICRzcGFjZSBjYWxjKDFlbSAqIDIpO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgICAmLmxvb2sge1xyXG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHllbGxvdztcclxuICAgICAgICBAaW5jbHVkZSBob3ZlcmFibGUoJGJhY2tncm91bmQ6IHRydWUpO1xyXG4gICAgfVxyXG4gICAgJi5yZXF1ZXN0IHtcclxuICAgICAgICBAaW5jbHVkZSBob3ZlcmFibGUoJGJhY2tncm91bmQ6IHRydWUsICR5ZWxsb3dpZnk6IHRydWUpO1xyXG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsYWNrO1xyXG4gICAgfVxyXG59IiwiLy8gY29sb3IgcGFsZXR0ZVxyXG4vLyBqZSBwcsOpZsOocmUgbGVzIGNvdWxldXJzIFwicm9uZGVzXCJcclxuJGJsYWNrOiAjMDExOyAvLyByZW1wbGFjZSBsZSAjMDQwOTFlXHJcbiRkYXJrOiAjMjIyO1xyXG4kZ3JleTogIzQ0NDtcclxuJGxpZ2h0OiAjZjlmOWZmOyAvLyBjb3VsZXVyIG5vbiB3ZWJzYWZlXHJcbiR3aGl0ZTogI2ZmZjtcclxuJHllbGxvdzogI2ZiMDsgLy8gcmVtcGxhY2UgbGUgI2Y4YjYwMFxyXG5cclxuLy8gbGF5b3V0IG1lYXN1cmVzXHJcbiRzcGFjZTogMXJlbTtcclxuXHJcbi8vIGZvbnQgc2l6ZXNcclxuJGZvbnQtZWxhc3RpYzogY2FsYygxNnB4ICsgLjE2dncpO1xyXG4kdGl0bGUtZWxhc3RpYzogY2FsYygyMHB4ICsgLjIwdncpO1xyXG5cclxuLy8gcmVzcG9uc2l2ZSBicmVha3BvaW50c1xyXG4kc21hbGwtc2NyZWVuOiA5OTJweDtcclxuJHRhYmxldDogNzY4cHg7XHJcbiRzbWFydHBob25lOiA1NzVweCIsImZvcm0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICA6bnRoLW9mLXR5cGUoMSkge2ZsZXgtYmFzaXM6IDEwMCU7fVxyXG4gICAgOm50aC1vZi10eXBlKDIpIHtmbGV4LWJhc2lzOiA1MHB4O31cclxuICAgIGlucHV0IHtcclxuICAgICAgICBoZWlnaHQ6IGNhbGMoJHNwYWNlICogMyk7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsYWNrO1xyXG4gICAgICAgIGJvcmRlci1jb2xvcjogJGdyZXkgdHJhbnNwYXJlbnQgJGdyZXkgJGdyZXk7XHJcbiAgICAgICAgcGFkZGluZzogJHNwYWNlO1xyXG4gICAgICAgICY6Zm9jdXMge1xyXG4gICAgICAgICAgICBvdXRsaW5lOiAxcHggc29saWQgJHllbGxvdztcclxuICAgICAgICB9XHJcbiAgICAgICAgJjo6cGxhY2Vob2xkZXIge1xyXG4gICAgICAgICAgICBjb2xvcjogJGdyZXk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XHJcbiAgICAgICAgYXNwZWN0LXJhdGlvOiAxO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR5ZWxsb3c7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIHRleHQtaW5kZW50OiAtOTk5OTlweDsgLy8gY2FjaGUgbGUgdGV4dGVcclxuICAgIH1cclxuICAgIHN2ZyB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHdpZHRoOiAyNHB4O1xyXG4gICAgICAgIHJpZ2h0OiAxM3B4O1xyXG4gICAgfVxyXG59IiwiLy8gZ2FsZXJpZSBlbiBncmlkIGNvbXByZW5hbnQgMTIgaW1hZ2VzXHJcbi8vIChzJ2lsIHkgZW4gYSBwbHVzIGVsbGUgbmUgbGVzIGFmZmljaGUgcGFzKVxyXG5cclxuLy8gZ2FsZXJpZSBkYW5zIGZvb3RlciBldCBzaWRlbmF2XHJcbi5nYWxsZXJ5IHtcclxuICAgIC5ncmlkIHtcclxuICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgIC8vIOKUjOKUgOKUrOKUgOKUrOKUgOKUrOKUgOKUkFxyXG4gICAgICAgIC8vIOKUnOKUgOKUvOKUgOKUvOKUgOKUvOKUgOKUpCAgICAyIGxpZ25lcyAgIDMgY29sb25uZXNcclxuICAgICAgICAvLyDilJTilIDilLTilIDilLTilIDilLTilIDilJggICAgICBcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAxZnIpO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsIDFmcik7XHJcbiAgICAgICAgZ2FwOiBjYWxjKCRzcGFjZSAqIC43NSk7XHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBjYWNoZSBsZXMgw6lsw6ltZW50cyBhcHLDqHMgbGUgMTJlXHJcbiAgICAgICAgICAgICY6bnRoLW9mLXR5cGUobisxMykge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyB1biBvdmVybGF5IHMnYWpvdXRlIGF1IGhvdmVyXHJcbiAgICAgICAgICAgIEBpbmNsdWRlIG92ZXJsYXktYmVmb3JlIChcclxuICAgICAgICAgICAgICAgICRiZzogJHllbGxvdyxcclxuICAgICAgICAgICAgICAgICRvcGFjaXR5OiAwLFxyXG4gICAgICAgICAgICAgICAgJHotaW5kZXg6IDJcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uLWVjbGFpciAoJGR1cmVlOiAuMnMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IC42O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiYm9keSB7XHJcbiAgICBoMSwgaDIsIGgzLCBoNCB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICdQb3BwaW5zJywgJ0dpbGwgU2FucycsICdHaWxsIFNhbnMgTVQnLCBDYWxpYnJpLCAnVHJlYnVjaGV0IE1TJywgc2Fucy1zZXJpZjtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgfVxyXG4gICAgcCwgYSwgaW5wdXQge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAnUG9wcGlucycsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIH1cclxuICAgIGEge1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGNvbG9yOiBpbmhlcml0O1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyBwZXRpdCBjb2V1ciBxdWkgdmllbnQgcmVtcGxhY2VyIGxlIHRleHRlIPCfkptcclxuc3Bhbi5oZWFydCB7XHJcbiAgICBmb250LXNpemU6IDA7XHJcbiAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgIGNvbnRlbnQ6ICdcXDI3NjQnO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogaW5pdGlhbDtcclxuICAgIH1cclxufVxyXG5cclxuaDEge1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxufVxyXG5cclxuLnN1cGVyIHtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBmb250LXNpemU6IGNhbGMoJHRpdGxlLWVsYXN0aWMgKiAuNjUpO1xyXG59IiwiLnJldmlld3Mtc2xpZGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgLnJldmlldyB7XHJcbiAgICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgICBwYWRkaW5nOiAxZW07XHJcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHNtYXJ0cGhvbmUpIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgICAgICBjb2xvcjogJGRhcms7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xyXG4gICAgICAgIC5pbWctd3JhcHBlciB7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDk5OXB4O1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICB3aWR0aDogY2FsYygkc3BhY2UgKiA2KTtcclxuICAgICAgICAgICAgaGVpZ2h0OiBmaXQtY29udGVudDtcclxuICAgICAgICAgICAgYXNwZWN0LXJhdGlvOiAxO1xyXG4gICAgICAgICAgICBtYXJnaW46IGNhbGMoJHNwYWNlICogLjUpIGNhbGMoJHNwYWNlKTtcclxuICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZpZ3VyZSB7XHJcbiAgICAgICAgICAgICY+KiB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IGNhbGMoJHNwYWNlIC8gMik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC5zdGFycyB7XHJcbiAgICAgICAgICAgICAgICAtLXBlcmNlbnQ6IGNhbGModmFyKC0tcmF0aW5nKSAvIDUgKiAxMDAlKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiBjYWxjKCRzcGFjZSAqIDIpO1xyXG4gICAgICAgICAgICAgICAgLy8gZm9udC1mYW1pbHk6IFRpbWVzO1xyXG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDE7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICfimIXimIXimIXimIXimIUnO1xyXG4gICAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogM3B4O1xyXG4gICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXHJcbiAgICAgICAgICAgICAgICAgICAgICA5MGRlZyxcclxuICAgICAgICAgICAgICAgICAgICAgICR5ZWxsb3cgdmFyKC0tcGVyY2VudCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAkZ3JleSB2YXIoLS1wZXJjZW50KSk7XHJcbiAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY2xpcDogdGV4dDtcclxuICAgICAgICAgICAgICAgICAgLXdlYmtpdC10ZXh0LWZpbGwtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiYXJ0aWNsZSB7XHJcbiAgICAudGFncyB7XHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiBjYWxjKCRzcGFjZSAqIC4yNSkgY2FsYygkc3BhY2UgKiAuNzUpO1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkbGlnaHQ7XHJcbiAgICAgICAgICAgIG1hcmdpbjogY2FsYygkc3BhY2UgKiAuNzUpIGNhbGMoJHNwYWNlICogLjI1KTtcclxuICAgICAgICAgICAgJjpmaXJzdC1vZi10eXBlIHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGhvdmVyYWJsZSAoJGJhY2tncm91bmQ6IHRydWUsICR5ZWxsb3dpZnk6IHRydWUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi8vIGNhcnRlIGdvb2dsZVxyXG4ubWFwb3V0ZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICBoZWlnaHQ6IDUwMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcclxuICAgIGJvcmRlcjogY2FsYygkc3BhY2UgLyAyKSBzb2xpZCAkd2hpdGU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAkc3BhY2U7XHJcbiAgICAuZ21hcF9jYW52YXMge1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgYmFja2dyb3VuZDogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgICAgIGhlaWdodDogNTAwcHg7XHJcbiAgICB9XHJcbn0iLCJmb290ZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmxhY2s7XHJcbiAgICBjb2xvcjogJGdyZXk7XHJcbiAgICBAaW5jbHVkZSBpbm5lci1zcGFjaW5nICgkdW5pdDogNCk7XHJcbiAgICAmOm5vdCg6bGFzdC1vZi10eXBlKSB7IHBhZGRpbmctYm90dG9tOiAwOyB9XHJcbiAgICAmOm5vdCg6Zmlyc3Qtb2YtdHlwZSkgeyBwYWRkaW5nLXRvcDogMDsgfVxyXG4gICAgLy8gbGEgc2VjdGlvbiBlc3QgZW4gZ3JpZCBwb3VyIHBvdXZvaXIgcydlbXBpbGVyXHJcbiAgICAmLmluZm8+KiB7XHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAxZnIpO1xyXG4gICAgICAgIGdhcDogJHNwYWNlO1xyXG4gICAgfVxyXG4gICAgJi5saW5rcz4qIHtcclxuICAgICAgICBAaW5jbHVkZSBpbm5lci1zcGFjaW5nICgkdW5pdDogMik7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xyXG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkZGFyaztcclxuICAgICAgICBhLCBzcGFuIHtcclxuICAgICAgICAgICAgY29sb3I6ICR5ZWxsb3c7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5zb2NpYWwge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBnYXA6ICRzcGFjZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvLyB0eXBvIGR1IGZvb3RlclxyXG4gICAgaDEsIGgyLCBoMywgaDQge1xyXG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBmb250LXNpemU6IGNhbGMoJHRpdGxlLWVsYXN0aWMgKiAuNzUpO1xyXG4gICAgfVxyXG4gICAgcCwgYSB7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IGluaXRpYWw7XHJcbiAgICAgICAgZm9udC1zaXplOiBjYWxjKCRmb250LWVsYXN0aWMgKiAuNzUpO1xyXG4gICAgfVxyXG4gICAgLy8gIHRvdXQgY2UgcXVpIHN1aXQgdW4gaDMgZGFucyBsZSBmb290ZXJcclxuICAgIGgzICsgcCwgaDMgKyBkaXYge1xyXG4gICAgICAgIEBpbmNsdWRlIGlubmVyLXNwYWNpbmcgKCR1bml0OiAxLjc1KTtcclxuICAgIH1cclxuICAgIC5zaXRlLW5hdmlnYXRpb24ge1xyXG4gICAgICAgIGRpdiB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDUsIDFmcik7XHJcbiAgICAgICAgICAgIGgzIHtcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiBzcGFuIDI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59IiwiLndyYXBwZXIge1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB3aWR0aDogMTE0MHB4O1xyXG59XHJcblxyXG4vLyBham91dGUgZHUgcGFkZGluZyBkYW5zIGxlcyBzZWN0aW9uc1xyXG4vLyBhdHRlbnRpb24gbGVzIHdyYXBwZXJzIGNvbXB0ZW50IGRlZGFuc1xyXG5kaXYuY29udGFpbmVyICB7XHJcbiAgICBwYWRkaW5nOiAwIGNhbGMoJHNwYWNlICogMSk7XHJcbn1cclxuc2VjdGlvbi5jb250YWluZXIgIHtcclxuICAgIHBhZGRpbmc6IGNhbGMoJHNwYWNlICogNikgY2FsYygkc3BhY2UgKiA2KTtcclxufVxyXG5cclxuLy8gYWpvdXRlIGR1IHBhZGRpbmdcclxuLnBhZCB7XHJcbiAgICBwYWRkaW5nOiBjYWxjKCRzcGFjZSAqIDMpO1xyXG59XHJcblxyXG4vLyBjb250cmVkaXQgY2VydGFpbnMgcGFkZGluZ3MgZXQgbWFyZ2lucyBwb3VyIGNlcnRhaW5zIHdyYXBwZXJzXHJcbi53cmFwcGVyLm5vcGFkIHtcclxuICAgIHBhZGRpbmctYm90dG9tOiAwO1xyXG4gICAgcGFkZGluZy10b3A6IDA7XHJcbn1cclxuXHJcbi8vIHRvdXRlIHNlY3Rpb24gZG9udCBsZSBjb250ZW51IGVzdCBjZW50csOpXHJcbi5jZW50ZXItY29udGVudCA+IC53cmFwcGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIC50aXRsZSB7XHJcbiAgICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIGRpZmbDqXJlbnRlcyBjb3VsZXVycyBkZSBmb25kXHJcbi5saWdodCB7IGJhY2tncm91bmQtY29sb3I6ICRsaWdodDsgfVxyXG5cclxuLy8gdG91dGUgc2VjdGlvbiBhdmVjIHVuZSBpbWFnZSBlbiBiYWNrZ3JvdW5kXHJcbi5iZyB7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxufVxyXG5cclxuLy8gY2xhc3NlcyBkJ29yZ2FuaXNhdGlvbiB2aXN1ZWxsZSBkZXMgw6lsw6ltZW50c1xyXG4vLyBzJ2FwcGxpcXVlbnQgc3VyIGxlIHdyYXBwZXJcclxuLnR3by1lbGVtZW50cyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgJj4qIHtcclxuICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgfVxyXG4gICAgQGluY2x1ZGUgaW5uZXItc3BhY2luZyAoJHVuaXQ6IDIpO1xyXG59XHJcblxyXG4udGhyZWUtZWxlbWVudHMge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcclxuICAgIEBpbmNsdWRlIGlubmVyLXNwYWNpbmcgKCR1bml0OiAyKTtcclxufVxyXG5cclxuLmZvdXItZWxlbWVudHMge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNCwgMWZyKTtcclxuICAgIEBpbmNsdWRlIGlubmVyLXNwYWNpbmcgKCR1bml0OiAyKTtcclxufVxyXG5cclxuLmltZy1yaWdodCB7XHJcbiAgICAudGV4dC13cmFwcGVyIHtcclxuICAgICAgICBwYWRkaW5nOiBjYWxjKCRzcGFjZSAqIDQpO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIC50ZXh0IHtcclxuICAgICAgICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGdhcDogJHNwYWNlO1xyXG4gICAgICAgICAgICAuYnV0dG9uIHtcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogY2FsYygkc3BhY2UgKiAzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5pbWctd3JhcHBlciB7XHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLmhvbWUgaGVhZGVyLmJnIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvcGhvdG9zL2hvbWUvaGVyby1ob21lLmpwZyk7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG59XHJcblxyXG4uYmxvZyBoZWFkZXIuYmd7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL3Bob3Rvcy9ibG9nL2hlcm8tYmxvZy5qcGcpO1xyXG4gICAgaGVpZ2h0OiAzNXZoO1xyXG59XHJcblxyXG5cclxuaGVhZGVyIHtcclxuICAgIEBpbmNsdWRlIG92ZXJsYXktYmVmb3JlICgkYmc6ICRibGFjaywgJG9wYWNpdHk6IC42LCAkei1pbmRleDogLTMpO1xyXG4gICAgLndyYXBwZXIge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAudGl0bGUge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICB3aWR0aDogMzAlO1xyXG4gICAgICAgICAgICAmPioge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAkc3BhY2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJuYXYge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgZm9udC1zaXplOiBjYWxjKCRmb250LWVsYXN0aWMgKiAuNik7XHJcbiAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICAuc29jaWFsLCAubG9nbyxcclxuICAgIC51c2VyLWFjdGlvbnMsIC5zaXRlLW5hdmlnYXRpb24ge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZ2FwOiAkc3BhY2U7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5uYXYtcm93IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAmLnVwcGVyIHtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogaW5pdGlhbDtcclxuICAgICAgICBAaW5jbHVkZSBvdXRlci1zcGFjaW5nICgkdW5pdDogMSlcclxuICAgIH1cclxuICAgICYuaGlnaGxpZ2h0IHtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGNvbG9yOiAkd2hpdGUsICRhbHBoYTogLjIpO1xyXG4gICAgICAgIEBpbmNsdWRlIG91dGVyLXNwYWNpbmcgKCR1bml0OiAxKTtcclxuICAgICAgICBAaW5jbHVkZSBpbm5lci1zcGFjaW5nICgkdW5pdDogMSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbiIsIi5kZXN0aW5hdGlvbnMge1xyXG4gICAgLmltZy13cmFwcGVyIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgZGl2IHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGlubmVyLXNwYWNpbmcgKCR1bml0OiAuNSk7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICBhIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHllbGxvdztcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IGNhbGMoJHNwYWNlICogLjI1KSBjYWxjKCRzcGFjZSAqIC43NSk7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24tZWNsYWlyO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICBhIHtcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAuMztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBqJ2F2YWlzIHVuIHAqKiogZGUgbWl4aW4gb3ZlcmxheSwgTUFJUyDDoCBjaGFxdWUgZm9pcyBxdWUgamVcclxuICAgICAgICAvLyBsJ3V0aWxpc2Ugw6dhIGNhc3NlIGxlIGhvdmVyLiBEb25jIGplIHJldGFwZSBsZSBjb2RlIGRlcyBvdmVybGF5c1xyXG4gICAgICAgIC8vIGV0IGplIHN1aXMgdW4gcGV1IGTDqcOndSBkZSBtYW5xdWVyIGRlIHRlbXBzIHBvdXIgZMOpYnVnZ3VlciDDp2EgOihcclxuICAgICAgICAmOmFmdGVyIHtcclxuICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsYWNrO1xyXG4gICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDA7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24tZWNsYWlyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLnByaWNlcyB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2dyYXBoaWNzL3dvcmxkLnBuZyk7XHJcbiAgICBoMyB7XHJcbiAgICAgICAgQGluY2x1ZGUgaW5uZXItc3BhY2luZztcclxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHllbGxvdztcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcbiAgICB9XHJcbiAgICAucHJpY2UtdGFibGUge1xyXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xyXG4gICAgICAgIHBhZGRpbmc6IDEuMjVlbSAwO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNzclIDIwJTtcclxuICAgICAgICBnYXA6IC43NWVtO1xyXG4gICAgICAgIHAsIGEge1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMmVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBhIHtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGxpZ2h0O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ== */
